{"ast":null,"code":"var _jsxFileName = \"/home/gustavo/q2/gestao3/capstone-q2-educ-financeira-g4/src/Providers/Activities/index.tsx\",\n    _s = $RefreshSig$();\n\nimport { createContext, useState } from \"react\";\nimport { toast } from \"react-toastify\";\nimport { showToast } from \"../../Components/Toast/style\";\nimport api from '../../Services/api';\nimport { useUser } from \"../Users\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const ActivitiesContext = /*#__PURE__*/createContext({});\nexport const ActivitiesProvider = ({\n  children\n}) => {\n  _s();\n\n  toast.configure();\n  const [childrenArr, setChildrenArr] = useState([]);\n  const [actualActivitieId, setActualActivitieId] = useState(0);\n  const [amountToPay, setAmountToPay] = useState(0);\n  const {\n    userId\n  } = useUser();\n\n  const getYourChildrens = () => {\n    api.get(`users?parentId=${userId}`, {\n      headers: {\n        Authorization: `Bearer ${localStorage.getItem('token')}`\n      }\n    }).then(response => {\n      setChildrenArr([...response.data]);\n    }).catch(err => {\n      console.log('getyourChildrens', err);\n      localStorage.clear();\n    });\n  };\n\n  const updateActivitie = task => {\n    api.patch(`activities/${task.id}`, task, {\n      headers: {\n        Authorization: `Bearer ${localStorage.getItem('token')}`\n      }\n    }).then(() => showToast({\n      type: \"success\",\n      message: \"Atividade concluída com sucesso\"\n    }));\n  };\n\n  const createActivie = task => {\n    api.post('activities', task, {\n      headers: {\n        Authorization: `Bearer ${localStorage.getItem('token')}`\n      }\n    }).then(() => {\n      showToast({\n        type: \"success\",\n        message: \"Atividade adicionada com sucesso\"\n      });\n    });\n  };\n\n  const getAmountToPay = () => {\n    api.get(`/activities?userId=${userId}`, {\n      headers: {\n        Authorization: `Bearer ${localStorage.getItem('token')}`\n      }\n    }).then(response => {\n      setAmountToPay(response.data.filter(el => el.achivied === true).reduce((acc, val) => acc + val.reward, 0));\n    }).catch(e => {\n      console.log(e);\n    });\n  };\n\n  const deleteActivitie = activitie => {\n    api.delete(`activities/${activitie.id}`).then(() => showToast({\n      type: \"success\",\n      message: \"Pagamento concluído\"\n    }));\n  };\n\n  const changingActualIdActivitie = activitieId => {\n    setActualActivitieId(activitieId);\n  };\n\n  return /*#__PURE__*/_jsxDEV(ActivitiesContext.Provider, {\n    value: {\n      getYourChildrens,\n      userId,\n      childrenArr,\n      updateActivitie,\n      createActivie,\n      changingActualIdActivitie,\n      actualActivitieId,\n      getAmountToPay,\n      amountToPay,\n      deleteActivitie\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 128,\n    columnNumber: 9\n  }, this);\n};\n\n_s(ActivitiesProvider, \"EDZQNB08529UPetL7/Mmm0NUdPU=\", false, function () {\n  return [useUser];\n});\n\n_c = ActivitiesProvider;\n\nvar _c;\n\n$RefreshReg$(_c, \"ActivitiesProvider\");","map":{"version":3,"sources":["/home/gustavo/q2/gestao3/capstone-q2-educ-financeira-g4/src/Providers/Activities/index.tsx"],"names":["createContext","useState","toast","showToast","api","useUser","ActivitiesContext","ActivitiesProvider","children","configure","childrenArr","setChildrenArr","actualActivitieId","setActualActivitieId","amountToPay","setAmountToPay","userId","getYourChildrens","get","headers","Authorization","localStorage","getItem","then","response","data","catch","err","console","log","clear","updateActivitie","task","patch","id","type","message","createActivie","post","getAmountToPay","filter","el","achivied","reduce","acc","val","reward","e","deleteActivitie","activitie","delete","changingActualIdActivitie","activitieId"],"mappings":"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","sourcesContent":["import { createContext, ReactNode, useState } from \"react\";\nimport { toast } from \"react-toastify\";\nimport { showToast } from \"../../Components/Toast/style\";\nimport api from '../../Services/api'\nimport { useUser } from \"../Users\";\n\ninterface ActivitiesProviderData{\n    getYourChildrens: ()=> void,\n    userId:string,\n    childrenArr: Children[],\n    updateActivitie: (task:Activities) => void,\n    createActivie: (task:Activities) => void,\n    actualActivitieId:number\n    changingActualIdActivitie: (activitieId:number ) => void,\n    getAmountToPay: () => void\n    amountToPay: number,\n\n    deleteActivitie: (activitie:Activities) => void\n} \ninterface ActivitiesProviderProps{\n    children:ReactNode\n}\ninterface Children{\n        balance:[],\n        email:string,\n        id:number,\n        parentId:number,\n        password:string,\n        wallet:number,\n        wishlist:[],\n        name:string,\n        type: string\n}\ninterface Activities {\n    childAchivied: boolean,\n    parentAchivied: boolean,\n    frequency: string;\n    name: string;\n    reward: number;\n    userId: number;\n    id: number;\n}\ninterface ChildrenObj {\n    achivied: boolean,\n    childrenId: number,\n    frequency: string,\n    id: number,\n    name: string,\n    reward: 1000,\n    userId: 2\n}\n\n\nexport const ActivitiesContext = createContext<ActivitiesProviderData>({} as ActivitiesProviderData)\n\nexport const ActivitiesProvider = ({ children }:ActivitiesProviderProps) =>{\n    toast.configure()\n    const [ childrenArr, setChildrenArr ] = useState<Children[]>([])\n    const [ actualActivitieId, setActualActivitieId ]  = useState(0) \n    const [amountToPay, setAmountToPay] = useState<number>(0)\n    const { userId } = useUser()\n    const getYourChildrens = () =>{\n        api\n         .get(`users?parentId=${userId}`,{\n             headers:{\n                 Authorization:`Bearer ${localStorage.getItem('token')}`\n             }\n         })\n          .then((response)=> {\n            setChildrenArr([ ...response.data])\n          })\n           .catch((err)=>{\n               console.log('getyourChildrens', err)\n               localStorage.clear();\n            })\n           \n    }\n    const updateActivitie = (task:Activities) =>{\n        api\n         .patch(`activities/${task.id}`, task, {\n            headers:{\n                Authorization:`Bearer ${localStorage.getItem('token')}`\n            }\n        })\n         .then(()=> showToast({type:\"success\", message:\"Atividade concluída com sucesso\"}))\n         \n    }\n    const createActivie = (task:Activities) =>{\n        api\n         .post('activities',  task, {\n            headers:{\n                Authorization:`Bearer ${localStorage.getItem('token')}`\n            }\n        })\n         .then(()=>{\n             showToast({type:\"success\", message:\"Atividade adicionada com sucesso\"})\n         })\n    }\n\n    const getAmountToPay = () => {\n        api\n        .get(`/activities?userId=${userId}`, {\n            headers:{\n                Authorization:`Bearer ${localStorage.getItem('token')}`\n            }\n        })\n        .then(response => {\n            setAmountToPay(response.data.filter((el: ChildrenObj) => el.achivied === true)\n            .reduce((acc: number, val: ChildrenObj) => acc + val.reward, 0))\n        })\n        .catch(e => {\n            console.log(e)\n        })\n        \n    }\n\n    const deleteActivitie = (activitie:Activities) =>{\n        api\n         .delete(`activities/${activitie.id}`)\n          .then(() => showToast({type:\"success\", message:\"Pagamento concluído\"}))\n    }\n\n    const changingActualIdActivitie = (activitieId:number) =>{\n        setActualActivitieId(activitieId)\n    }\n    \n    return(\n        <ActivitiesContext.Provider value={{getYourChildrens, userId, childrenArr,updateActivitie, createActivie, changingActualIdActivitie, actualActivitieId, getAmountToPay, amountToPay, deleteActivitie}}>\n            { children }\n        </ActivitiesContext.Provider>\n    )\n}"]},"metadata":{},"sourceType":"module"}