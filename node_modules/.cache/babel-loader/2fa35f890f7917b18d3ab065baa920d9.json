{"ast":null,"code":"var _jsxFileName = \"/home/gustavo/q2/gestao3/capstone-q2-educ-financeira-g4/src/Providers/Toasts/index.tsx\";\nimport { createContext } from \"react\";\nimport { toast } from 'react-toastify';\nimport svgCry from '../../assets/images/crying.png';\nimport svgHappy from '../../assets/images/happy.png';\nimport svgWarning from '../../assets/images/wonder.png';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const ToastContext = /*#__PURE__*/createContext({});\nexport const ToastProvider = ({\n  children\n}) => {\n  toast.configure();\n\n  const toastSuccess = text => {\n    toast.success(`${text}`, {\n      icon: () => /*#__PURE__*/_jsxDEV(\"img\", {\n        src: svgHappy,\n        alt: \"happy kid\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 26\n      }, this)\n    });\n  };\n\n  const toastError = text => {\n    toast.error(`${text}`, {\n      icon: () => /*#__PURE__*/_jsxDEV(\"img\", {\n        src: svgCry,\n        alt: \"crying kid\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 26\n      }, this)\n    });\n  };\n\n  const toastWarning = text => {\n    toast.error(`${text}`, {\n      icon: () => /*#__PURE__*/_jsxDEV(\"img\", {\n        src: svgWarning,\n        alt: \"crying kid\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 26\n      }, this)\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(ToastContext.Provider, {\n    value: {\n      toastSuccess,\n      toastError,\n      toastWarning\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 9\n  }, this);\n};\n_c = ToastProvider;\n\nvar _c;\n\n$RefreshReg$(_c, \"ToastProvider\");","map":{"version":3,"sources":["/home/gustavo/q2/gestao3/capstone-q2-educ-financeira-g4/src/Providers/Toasts/index.tsx"],"names":["createContext","toast","svgCry","svgHappy","svgWarning","ToastContext","ToastProvider","children","configure","toastSuccess","text","success","icon","toastError","error","toastWarning"],"mappings":";AAAA,SAASA,aAAT,QAAyC,OAAzC;AACA,SAASC,KAAT,QAAsB,gBAAtB;AACA,OAAOC,MAAP,MAAmB,gCAAnB;AACA,OAAOC,QAAP,MAAqB,+BAArB;AACA,OAAOC,UAAP,MAAuB,gCAAvB;;AAUA,OAAO,MAAMC,YAAY,gBAAGL,aAAa,CAAC,EAAD,CAAlC;AAEP,OAAO,MAAMM,aAAa,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAoC;AAC7DN,EAAAA,KAAK,CAACO,SAAN;;AACA,QAAMC,YAAY,GAAIC,IAAD,IAAgB;AACjCT,IAAAA,KAAK,CAACU,OAAN,CAAe,GAAED,IAAK,EAAtB,EAAyB;AACrBE,MAAAA,IAAI,EAAE,mBAAO;AAAK,QAAA,GAAG,EAAET,QAAV;AAAoB,QAAA,GAAG,EAAC;AAAxB;AAAA;AAAA;AAAA;AAAA;AADQ,KAAzB;AAGH,GAJD;;AAKA,QAAMU,UAAU,GAAIH,IAAD,IAAgB;AAC/BT,IAAAA,KAAK,CAACa,KAAN,CAAa,GAAEJ,IAAK,EAApB,EAAuB;AACnBE,MAAAA,IAAI,EAAE,mBAAO;AAAK,QAAA,GAAG,EAAEV,MAAV;AAAkB,QAAA,GAAG,EAAC;AAAtB;AAAA;AAAA;AAAA;AAAA;AADM,KAAvB;AAGH,GAJD;;AAKA,QAAMa,YAAY,GAAIL,IAAD,IAAgB;AACjCT,IAAAA,KAAK,CAACa,KAAN,CAAa,GAAEJ,IAAK,EAApB,EAAuB;AACnBE,MAAAA,IAAI,EAAE,mBAAO;AAAK,QAAA,GAAG,EAAER,UAAV;AAAsB,QAAA,GAAG,EAAC;AAA1B;AAAA;AAAA;AAAA;AAAA;AADM,KAAvB;AAGH,GAJD;;AAMA,sBACI,QAAC,YAAD,CAAc,QAAd;AAAuB,IAAA,KAAK,EAAI;AAACK,MAAAA,YAAD;AAAcI,MAAAA,UAAd;AAAyBE,MAAAA;AAAzB,KAAhC;AAAA,cACMR;AADN;AAAA;AAAA;AAAA;AAAA,UADJ;AAKH,CAvBM;KAAMD,a","sourcesContent":["import { createContext, ReactNode } from \"react\";\nimport { toast } from 'react-toastify'\nimport svgCry from '../../assets/images/crying.png'\nimport svgHappy from '../../assets/images/happy.png'\nimport svgWarning from '../../assets/images/wonder.png'\n\ninterface ToastProviderProps{\n    children:ReactNode\n}\ninterface ToastProviderData{\n    toastSuccess: (text:string) => void,\n    toastError:(text:string)=> void,\n    toastWarning:(text:string) => void,\n}\nexport const ToastContext = createContext({} as ToastProviderData)\n\nexport const ToastProvider = ({ children }:ToastProviderProps) =>{\n    toast.configure()\n    const toastSuccess = (text:string) =>{\n        toast.success(`${text}`, {\n            icon: () =>  <img src={svgHappy} alt='happy kid'/>\n          });\n    }\n    const toastError = (text:string) =>{\n        toast.error(`${text}`, {\n            icon: () =>  <img src={svgCry} alt='crying kid'/>\n          });\n    }\n    const toastWarning = (text:string) =>{\n        toast.error(`${text}`, {\n            icon: () =>  <img src={svgWarning} alt='crying kid'/>\n          });\n    }\n\n    return(\n        <ToastContext.Provider value = {{toastSuccess,toastError,toastWarning}}>\n            { children }\n        </ToastContext.Provider>\n    )\n}"]},"metadata":{},"sourceType":"module"}