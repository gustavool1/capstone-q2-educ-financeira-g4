{"ast":null,"code":"var _jsxFileName = \"/home/gustavo/q2/gestao3/capstone-q2-educ-financeira-g4/src/Providers/Modal/index.tsx\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport { createContext, useContext, useState } from \"react\";\nimport { ActivitiesContext } from \"../Activities\";\nimport { ChildrenContext } from \"../Children\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const ModalContext = /*#__PURE__*/createContext({});\nexport const ModalProvider = ({\n  children\n}) => {\n  _s();\n\n  const {\n    changingActualChildren\n  } = useContext(ChildrenContext);\n  const {\n    changingActualIdActivitie\n  } = useContext(ActivitiesContext);\n  const [isEditing, setIsEditing] = useState(false);\n  const [isAdding, setIsAdding] = useState(false);\n  const [isWish, setIsWish] = useState(false);\n\n  const handleEditing = activitieId => {\n    changingActualIdActivitie(activitieId);\n    setIsEditing(!isEditing);\n  };\n\n  const handleAdding = childrenId => {\n    changingActualChildren(childrenId);\n    setIsAdding(!isAdding);\n  };\n\n  const HandleClickDetails = item => {\n    setIsWish(!isWish);\n  };\n\n  return /*#__PURE__*/_jsxDEV(ModalContext.Provider, {\n    value: {\n      handleEditing,\n      isEditing,\n      handleAdding,\n      isAdding,\n      HandleClickDetails,\n      setIsWish,\n      isWish\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 63,\n    columnNumber: 5\n  }, this);\n};\n\n_s(ModalProvider, \"p9+H/H02NzfsDVtR5z/R1QOJrhY=\");\n\n_c = ModalProvider;\nexport const useModal = () => {\n  _s2();\n\n  return useContext(ModalContext);\n};\n\n_s2(useModal, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\n\nvar _c;\n\n$RefreshReg$(_c, \"ModalProvider\");","map":{"version":3,"sources":["/home/gustavo/q2/gestao3/capstone-q2-educ-financeira-g4/src/Providers/Modal/index.tsx"],"names":["createContext","useContext","useState","ActivitiesContext","ChildrenContext","ModalContext","ModalProvider","children","changingActualChildren","changingActualIdActivitie","isEditing","setIsEditing","isAdding","setIsAdding","isWish","setIsWish","handleEditing","activitieId","handleAdding","childrenId","HandleClickDetails","item","useModal"],"mappings":";;;;AAAA,SAASA,aAAT,EAAmCC,UAAnC,EAA+CC,QAA/C,QAA+D,OAA/D;AACA,SAASC,iBAAT,QAAkC,eAAlC;AACA,SAASC,eAAT,QAAgC,aAAhC;;AAkCA,OAAO,MAAMC,YAAY,gBAAGL,aAAa,CACvC,EADuC,CAAlC;AAIP,OAAO,MAAMM,aAAa,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAsC;AAAA;;AACjE,QAAM;AAAEC,IAAAA;AAAF,MAA6BP,UAAU,CAACG,eAAD,CAA7C;AACA,QAAM;AAAEK,IAAAA;AAAF,MAAgCR,UAAU,CAACE,iBAAD,CAAhD;AACA,QAAM,CAACO,SAAD,EAAYC,YAAZ,IAA4BT,QAAQ,CAAC,KAAD,CAA1C;AACA,QAAM,CAACU,QAAD,EAAWC,WAAX,IAA0BX,QAAQ,CAAC,KAAD,CAAxC;AACA,QAAM,CAACY,MAAD,EAASC,SAAT,IAAsBb,QAAQ,CAAC,KAAD,CAApC;;AAEA,QAAMc,aAAa,GAAIC,WAAD,IAAyB;AAC7CR,IAAAA,yBAAyB,CAACQ,WAAD,CAAzB;AACAN,IAAAA,YAAY,CAAC,CAACD,SAAF,CAAZ;AACD,GAHD;;AAKA,QAAMQ,YAAY,GAAIC,UAAD,IAAwB;AAC3CX,IAAAA,sBAAsB,CAACW,UAAD,CAAtB;AACAN,IAAAA,WAAW,CAAC,CAACD,QAAF,CAAX;AACD,GAHD;;AAKA,QAAMQ,kBAAkB,GAAIC,IAAD,IAAgB;AACzCN,IAAAA,SAAS,CAAC,CAACD,MAAF,CAAT;AACD,GAFD;;AAIA,sBACE,QAAC,YAAD,CAAc,QAAd;AACE,IAAA,KAAK,EAAE;AACLE,MAAAA,aADK;AAELN,MAAAA,SAFK;AAGLQ,MAAAA,YAHK;AAILN,MAAAA,QAJK;AAKLQ,MAAAA,kBALK;AAMLL,MAAAA,SANK;AAOLD,MAAAA;AAPK,KADT;AAAA,cAWGP;AAXH;AAAA;AAAA;AAAA;AAAA,UADF;AAeD,CApCM;;GAAMD,a;;KAAAA,a;AAsCb,OAAO,MAAMgB,QAAQ,GAAG;AAAA;;AAAA,SAAMrB,UAAU,CAACI,YAAD,CAAhB;AAAA,CAAjB;;IAAMiB,Q","sourcesContent":["import { createContext, ReactNode, useContext, useState } from \"react\";\nimport { ActivitiesContext } from \"../Activities\";\nimport { ChildrenContext } from \"../Children\";\n\ninterface ModalProviderProps {\n  children: ReactNode;\n}\n\ninterface Wish {\n  name: string;\n  value: number;\n}\n\ninterface ModalProviderData {\n  handleEditing: (activitieId: number) => void;\n  isEditing: boolean;\n\n  handleAdding: (childrenId: number) => void;\n  isAdding: boolean;\n\n  HandleClickDetails: (item: Wish) => void;\n  isWish: boolean;\n  setIsWish: (isWish: boolean) => void;\n}\n\ninterface Children {\n  email: string;\n  name: string;\n  wallet: number;\n  type: string;\n  wishlist?: [];\n  balance?: [];\n  id: number;\n  parentId: number;\n}\n\nexport const ModalContext = createContext<ModalProviderData>(\n  {} as ModalProviderData\n);\n\nexport const ModalProvider = ({ children }: ModalProviderProps) => {\n  const { changingActualChildren } = useContext(ChildrenContext);\n  const { changingActualIdActivitie } = useContext(ActivitiesContext);\n  const [isEditing, setIsEditing] = useState(false);\n  const [isAdding, setIsAdding] = useState(false);\n  const [isWish, setIsWish] = useState(false);\n\n  const handleEditing = (activitieId: number) => {\n    changingActualIdActivitie(activitieId);\n    setIsEditing(!isEditing);\n  };\n\n  const handleAdding = (childrenId: number) => {\n    changingActualChildren(childrenId);\n    setIsAdding(!isAdding);\n  };\n\n  const HandleClickDetails = (item: Wish) => {\n    setIsWish(!isWish);\n  };\n\n  return (\n    <ModalContext.Provider\n      value={{\n        handleEditing,\n        isEditing,\n        handleAdding,\n        isAdding,\n        HandleClickDetails,\n        setIsWish,\n        isWish,\n      }}\n    >\n      {children}\n    </ModalContext.Provider>\n  );\n};\n\nexport const useModal = () => useContext(ModalContext);\n"]},"metadata":{},"sourceType":"module"}