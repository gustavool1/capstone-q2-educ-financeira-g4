{"ast":null,"code":"var _jsxFileName = \"/home/gustavo/q2/gestao3/capstone-q2-educ-financeira-g4/src/Providers/Activities/index.tsx\",\n    _s = $RefreshSig$();\n\nimport { createContext, useState } from \"react\";\nimport { toast } from \"react-toastify\";\nimport api from '../../Services/api';\nimport { useUser } from \"../Users\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const ActivitiesContext = /*#__PURE__*/createContext({});\nexport const ActivitiesProvider = ({\n  children\n}) => {\n  _s();\n\n  toast.configure();\n  const [childrenArr, setChildrenArr] = useState([]);\n  const [actualActivitieId, setActualActivitieId] = useState(0);\n  const [amountToPay, setAmountToPay] = useState(0);\n  const {\n    userId\n  } = useUser();\n\n  const getYourChildrens = () => {\n    api.get(`users?parentId=${userId}`, {\n      headers: {\n        Authorization: `Bearer ${localStorage.getItem('token')}`\n      }\n    }).then(response => {\n      console.log(response);\n      console.log(userId);\n      setChildrenArr([...response.data]);\n    }).catch(err => {\n      console.log('getyourChildrens', err);\n      localStorage.clear();\n    });\n  };\n\n  const updateActivitie = task => {\n    api.patch(`activities/${task.id}`, task, {\n      headers: {\n        Authorization: `Bearer ${localStorage.getItem('token')}`\n      }\n    }).then(() => toast.success(\"Atividade editada com sucesso\"));\n  };\n\n  const createActivie = task => {\n    api.post('activities', task, {\n      headers: {\n        Authorization: `Bearer ${localStorage.getItem('token')}`\n      }\n    }).then(() => {\n      toast.success(\"Atividade adicionada com sucesso\");\n    });\n  };\n\n  const getAmountToPay = () => {\n    api.get(`/activities?userId=${userId}`, {\n      headers: {\n        Authorization: `Bearer ${localStorage.getItem('token')}`\n      }\n    }).then(response => {\n      setAmountToPay(response.data.filter(el => el.achivied === true).reduce((acc, val) => acc + val.reward, 0));\n    }).catch(e => {\n      console.log(e);\n    });\n  };\n\n  const changingActualIdActivitie = activitieId => {\n    setActualActivitieId(activitieId);\n  };\n\n  return /*#__PURE__*/_jsxDEV(ActivitiesContext.Provider, {\n    value: {\n      getYourChildrens,\n      userId,\n      childrenArr,\n      updateActivitie,\n      createActivie,\n      changingActualIdActivitie,\n      actualActivitieId,\n      getAmountToPay,\n      amountToPay\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 120,\n    columnNumber: 9\n  }, this);\n};\n\n_s(ActivitiesProvider, \"EDZQNB08529UPetL7/Mmm0NUdPU=\", false, function () {\n  return [useUser];\n});\n\n_c = ActivitiesProvider;\n\nvar _c;\n\n$RefreshReg$(_c, \"ActivitiesProvider\");","map":{"version":3,"sources":["/home/gustavo/q2/gestao3/capstone-q2-educ-financeira-g4/src/Providers/Activities/index.tsx"],"names":["createContext","useState","toast","api","useUser","ActivitiesContext","ActivitiesProvider","children","configure","childrenArr","setChildrenArr","actualActivitieId","setActualActivitieId","amountToPay","setAmountToPay","userId","getYourChildrens","get","headers","Authorization","localStorage","getItem","then","response","console","log","data","catch","err","clear","updateActivitie","task","patch","id","success","createActivie","post","getAmountToPay","filter","el","achivied","reduce","acc","val","reward","e","changingActualIdActivitie","activitieId"],"mappings":"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","sourcesContent":["import { createContext, ReactNode, useState } from \"react\";\nimport { toast } from \"react-toastify\";\nimport api from '../../Services/api'\nimport { useUser } from \"../Users\";\n\ninterface ActivitiesProviderData{\n    getYourChildrens: ()=> void,\n    userId:string,\n    childrenArr: Children[],\n    updateActivitie: (task:Activities) => void,\n    createActivie: (task:Activities) => void,\n    actualActivitieId:number\n    changingActualIdActivitie: (activitieId:number ) => void,\n    getAmountToPay: () => void\n    amountToPay: number\n} \ninterface ActivitiesProviderProps{\n    children:ReactNode\n}\ninterface Children{\n        balance:[],\n        email:string,\n        id:number,\n        parentId:number,\n        password:string,\n        wallet:number,\n        wishlist:[],\n        name:string,\n        type: string\n}\ninterface Activities {\n    achivied: boolean\n    frequency: string\n    name: string\n    reward: number\n    userId: number,\n    id?:number\n}\ninterface ChildrenObj {\n    achivied: boolean,\n    childrenId: number,\n    frequency: string,\n    id: number,\n    name: string,\n    reward: 1000,\n    userId: 2\n}\n\n\nexport const ActivitiesContext = createContext<ActivitiesProviderData>({} as ActivitiesProviderData)\n\nexport const ActivitiesProvider = ({ children }:ActivitiesProviderProps) =>{\n    toast.configure()\n    const [ childrenArr, setChildrenArr ] = useState<Children[]>([])\n    const [ actualActivitieId, setActualActivitieId ]  = useState(0) \n    const [amountToPay, setAmountToPay] = useState<number>(0)\n    const { userId } = useUser()\n    const getYourChildrens = () =>{\n        api\n         .get(`users?parentId=${userId}`,{\n             headers:{\n                 Authorization:`Bearer ${localStorage.getItem('token')}`\n             }\n         })\n          .then((response)=> {\n            console.log(response)\n            console.log(userId)\n            setChildrenArr([ ...response.data])\n          })\n           .catch((err)=>{\n               console.log('getyourChildrens', err)\n               localStorage.clear();\n            })\n           \n    }\n    const updateActivitie = (task:Activities) =>{\n        api\n         .patch(`activities/${task.id}`, task, {\n            headers:{\n                Authorization:`Bearer ${localStorage.getItem('token')}`\n            }\n        })\n         .then(()=> toast.success((\"Atividade editada com sucesso\")))\n         \n    }\n    const createActivie = (task:Activities) =>{\n        api\n         .post('activities',  task, {\n            headers:{\n                Authorization:`Bearer ${localStorage.getItem('token')}`\n            }\n        })\n         .then(()=>{\n             toast.success(\"Atividade adicionada com sucesso\")\n         })\n    }\n\n    const getAmountToPay = () => {\n        api\n        .get(`/activities?userId=${userId}`, {\n            headers:{\n                Authorization:`Bearer ${localStorage.getItem('token')}`\n            }\n        })\n        .then(response => {\n            setAmountToPay(response.data.filter((el: ChildrenObj) => el.achivied === true)\n            .reduce((acc: number, val: ChildrenObj) => acc + val.reward, 0))\n        })\n        .catch(e => {\n            console.log(e)\n        })\n        \n    }\n\n    const changingActualIdActivitie = (activitieId:number) =>{\n        setActualActivitieId(activitieId)\n    }\n    \n    return(\n        <ActivitiesContext.Provider value={{getYourChildrens, userId, childrenArr,updateActivitie, createActivie, changingActualIdActivitie, actualActivitieId, getAmountToPay, amountToPay}}>\n            { children }\n        </ActivitiesContext.Provider>\n    )\n}"]},"metadata":{},"sourceType":"module"}