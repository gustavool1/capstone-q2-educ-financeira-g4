{"ast":null,"code":"var _jsxFileName = \"/home/gustavo/q2/gestao3/capstone-q2-educ-financeira-g4/src/Providers/Activities/index.tsx\",\n    _s = $RefreshSig$();\n\nimport { createContext, useState } from \"react\";\nimport api from '../../Services/api';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const ActivitiesContext = /*#__PURE__*/createContext({});\nexport const ActivitiesProvider = ({\n  children\n}) => {\n  _s();\n\n  const [childrenArr, setChildrenArr] = useState([]);\n  const [userId] = useState(() => localStorage.getItem(\"userId\") || \"\");\n\n  const getYourChildrens = () => {\n    api.get(`users?parentId=${userId}`, {\n      headers: {\n        Authorization: `Bearer ${localStorage.getItem('token')}`\n      }\n    }).then(response => setChildrenArr([...response.data])).catch(err => console.log('getyourChildrens', err));\n  };\n\n  const updateActivitie = task => {\n    api.patch(`activities/${task.id}`, task, {\n      headers: {\n        Authorization: `Bearer ${localStorage.getItem('token')}`\n      }\n    });\n  };\n\n  const createActivie = task => {\n    api.post('activities', task, {\n      headers: {\n        Authorization: `Bearer ${localStorage.getItem('token')}`\n      }\n    }).then(response => console.log(response));\n  };\n\n  const getYourActivities = userId => {\n    api.get(`activities/?userId=${userId}`, {\n      headers: {\n        Authorization: `Bearer ${localStorage.getItem('token')}`\n      }\n    }).then(response => {\n      setChildrenActivities(response.data);\n    }).catch(err => console.log('geyourActivies', err));\n  };\n\n  return /*#__PURE__*/_jsxDEV(ActivitiesContext.Provider, {\n    value: {\n      getYourChildrens,\n      userId,\n      childrenArr,\n      updateActivitie,\n      createActivie\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 86,\n    columnNumber: 9\n  }, this);\n};\n\n_s(ActivitiesProvider, \"nJqVjwRxXAARHnwBlXIrAaBm/eI=\");\n\n_c = ActivitiesProvider;\n\nvar _c;\n\n$RefreshReg$(_c, \"ActivitiesProvider\");","map":{"version":3,"sources":["/home/gustavo/q2/gestao3/capstone-q2-educ-financeira-g4/src/Providers/Activities/index.tsx"],"names":["createContext","useState","api","ActivitiesContext","ActivitiesProvider","children","childrenArr","setChildrenArr","userId","localStorage","getItem","getYourChildrens","get","headers","Authorization","then","response","data","catch","err","console","log","updateActivitie","task","patch","id","createActivie","post","getYourActivities","setChildrenActivities"],"mappings":";;;AAAA,SAASA,aAAT,EAAmCC,QAAnC,QAAmD,OAAnD;AACA,OAAOC,GAAP,MAAgB,oBAAhB;;AAkCA,OAAO,MAAMC,iBAAiB,gBAAGH,aAAa,CAAyB,EAAzB,CAAvC;AAEP,OAAO,MAAMI,kBAAkB,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAyC;AAAA;;AACvE,QAAM,CAAEC,WAAF,EAAeC,cAAf,IAAkCN,QAAQ,CAAa,EAAb,CAAhD;AACA,QAAM,CAAEO,MAAF,IAAaP,QAAQ,CACvB,MAAMQ,YAAY,CAACC,OAAb,CAAqB,QAArB,KAAkC,EADjB,CAA3B;;AAGA,QAAMC,gBAAgB,GAAG,MAAK;AAC1BT,IAAAA,GAAG,CACDU,GADF,CACO,kBAAiBJ,MAAO,EAD/B,EACiC;AAC5BK,MAAAA,OAAO,EAAC;AACJC,QAAAA,aAAa,EAAE,UAASL,YAAY,CAACC,OAAb,CAAqB,OAArB,CAA8B;AADlD;AADoB,KADjC,EAMGK,IANH,CAMSC,QAAD,IAAaT,cAAc,CAAC,CAAE,GAAGS,QAAQ,CAACC,IAAd,CAAD,CANnC,EAOIC,KAPJ,CAOWC,GAAD,IAAOC,OAAO,CAACC,GAAR,CAAY,kBAAZ,EAAgCF,GAAhC,CAPjB;AASH,GAVD;;AAWA,QAAMG,eAAe,GAAIC,IAAD,IAAoB;AACxCrB,IAAAA,GAAG,CACDsB,KADF,CACS,cAAaD,IAAI,CAACE,EAAG,EAD9B,EACiCF,IADjC,EACuC;AACnCV,MAAAA,OAAO,EAAC;AACJC,QAAAA,aAAa,EAAE,UAASL,YAAY,CAACC,OAAb,CAAqB,OAArB,CAA8B;AADlD;AAD2B,KADvC;AAOH,GARD;;AASA,QAAMgB,aAAa,GAAIH,IAAD,IAAoB;AACtCrB,IAAAA,GAAG,CACDyB,IADF,CACO,YADP,EACsBJ,IADtB,EAC4B;AACxBV,MAAAA,OAAO,EAAC;AACJC,QAAAA,aAAa,EAAE,UAASL,YAAY,CAACC,OAAb,CAAqB,OAArB,CAA8B;AADlD;AADgB,KAD5B,EAMEK,IANF,CAMQC,QAAD,IAAYI,OAAO,CAACC,GAAR,CAAYL,QAAZ,CANnB;AAOH,GARD;;AAUA,QAAMY,iBAAiB,GAAIpB,MAAD,IAAkB;AACxCN,IAAAA,GAAG,CACDU,GADF,CACO,sBAAqBJ,MAAO,EADnC,EACqC;AACjCK,MAAAA,OAAO,EAAC;AACJC,QAAAA,aAAa,EAAE,UAASL,YAAY,CAACC,OAAb,CAAqB,OAArB,CAA8B;AADlD;AADyB,KADrC,EAMGK,IANH,CAMSC,QAAD,IAAY;AACda,MAAAA,qBAAqB,CAACb,QAAQ,CAACC,IAAV,CAArB;AACH,KARH,EASIC,KATJ,CASWC,GAAD,IAAOC,OAAO,CAACC,GAAR,CAAY,gBAAZ,EAA8BF,GAA9B,CATjB;AAUH,GAXD;;AAYA,sBACI,QAAC,iBAAD,CAAmB,QAAnB;AAA4B,IAAA,KAAK,EAAE;AAACR,MAAAA,gBAAD;AAAmBH,MAAAA,MAAnB;AAA2BF,MAAAA,WAA3B;AAAuCgB,MAAAA,eAAvC;AAAwDI,MAAAA;AAAxD,KAAnC;AAAA,cACMrB;AADN;AAAA;AAAA;AAAA;AAAA,UADJ;AAKH,CApDM;;GAAMD,kB;;KAAAA,kB","sourcesContent":["import { createContext, ReactNode, useState } from \"react\";\nimport api from '../../Services/api'\n\ninterface ActivitiesProviderData{\n    getYourChildrens: ()=> void,\n    userId:string,\n    childrenArr: Children[],\n    updateActivitie: (task:Activities) => void,\n    createActivie: (task:Activities) => void,\n    getYourActivities:(userId:number) => void\n} \ninterface ActivitiesProviderProps{\n    children:ReactNode\n}\ninterface Children{\n        balance:[],\n        email:string,\n        id:number,\n        parentId:number,\n        password:string,\n        wallet:number,\n        wishlist:[],\n        name:string,\n        type: string\n}\ninterface Activities {\n    achivied: boolean\n    frequency: string\n    name: string\n    reward: number\n    userId: number,\n    id?:number\n}\n\n\nexport const ActivitiesContext = createContext<ActivitiesProviderData>({} as ActivitiesProviderData)\n\nexport const ActivitiesProvider = ({ children }:ActivitiesProviderProps) =>{\n    const [ childrenArr, setChildrenArr ] = useState<Children[]>([])\n    const [ userId ] = useState(\n        () => localStorage.getItem(\"userId\") || \"\"\n    )\n    const getYourChildrens = () =>{\n        api\n         .get(`users?parentId=${userId}`,{\n             headers:{\n                 Authorization:`Bearer ${localStorage.getItem('token')}`\n             }\n         })\n          .then((response)=> setChildrenArr([ ...response.data]))\n           .catch((err)=>console.log('getyourChildrens', err))\n           \n    }\n    const updateActivitie = (task:Activities) =>{\n        api\n         .patch(`activities/${task.id}`, task, {\n            headers:{\n                Authorization:`Bearer ${localStorage.getItem('token')}`\n            }\n        })\n         \n    }\n    const createActivie = (task:Activities) =>{\n        api\n         .post('activities',  task, {\n            headers:{\n                Authorization:`Bearer ${localStorage.getItem('token')}`\n            }\n        })\n         .then((response)=>console.log(response))\n    }\n\n    const getYourActivities = (userId:number) =>{\n        api\n         .get(`activities/?userId=${userId}`,{\n            headers:{\n                Authorization:`Bearer ${localStorage.getItem('token')}`\n            }\n        })\n          .then((response)=>{\n              setChildrenActivities(response.data)\n          })\n           .catch((err)=>console.log('geyourActivies', err))\n    }\n    return(\n        <ActivitiesContext.Provider value={{getYourChildrens, userId, childrenArr,updateActivitie, createActivie }}>\n            { children }\n        </ActivitiesContext.Provider>\n    )\n}"]},"metadata":{},"sourceType":"module"}