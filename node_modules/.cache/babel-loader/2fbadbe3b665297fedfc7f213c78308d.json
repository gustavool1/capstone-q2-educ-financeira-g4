{"ast":null,"code":"var _jsxFileName = \"/home/gustavo/q2/gestao3/capstone-q2-educ-financeira-g4/src/Components/CardChildren/index.tsx\",\n    _s = $RefreshSig$();\n\nimport { useContext, useEffect, useState } from \"react\";\nimport { ActivitiesContext } from \"../../Providers/Activities\";\nimport { Container, Achivied, NotAchivied, Front, Back } from \"./style.js\";\nimport api from '../../Services/api';\nimport ReactCardFlip from 'react-card-flip';\nimport { IoIosCreate } from \"react-icons/io\";\nimport { ChildrenContext } from \"../../Providers/Children\";\nimport { ModalContext } from \"../../Providers/Modal\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst CardChildren = ({\n  children\n}) => {\n  _s();\n\n  const [childrenActivies, setChildrenActivities] = useState([]);\n  const [isFlipped, setIsFlipped] = useState(false);\n  const {\n    updateActivitie,\n    getYourChildrens,\n    createActivie\n  } = useContext(ActivitiesContext);\n  const {\n    handleAdding,\n    handleEditing\n  } = useContext(ModalContext);\n  const {\n    updateWallet\n  } = useContext(ChildrenContext);\n\n  const FinishingTask = (e, task) => {\n    task.achivied = true;\n    updateActivitie(task);\n    updateWallet(children, task.reward);\n    getYourChildrens();\n    getYourActivities(children.id);\n    e.target.checked = false;\n  };\n\n  const getYourActivities = userId => {\n    api.get(`activities/?userId=${userId}`, {\n      headers: {\n        Authorization: `Bearer ${localStorage.getItem('token')}`\n      }\n    }).then(response => {\n      setChildrenActivities(response.data);\n    }).catch(err => console.log('getyourActivies', err));\n  };\n\n  const handleClick = () => {\n    setIsFlipped(!isFlipped);\n  };\n\n  useEffect(() => {\n    getYourActivities(children.id);\n  }, [createActivie]);\n  return /*#__PURE__*/_jsxDEV(Container, {\n    children: /*#__PURE__*/_jsxDEV(ReactCardFlip, {\n      isFlipped: isFlipped,\n      flipDirection: \"horizontal\",\n      children: [/*#__PURE__*/_jsxDEV(Front, {\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: children.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"R$\", children.wallet]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Back, {\n        children: [/*#__PURE__*/_jsxDEV(Achivied, {\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            children: [\"Tarefas Conclu\\xEDdas: \", childrenActivies.filter(item => item.achivied === true).length]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 84,\n            columnNumber: 21\n          }, this), childrenActivies.filter(item => item.achivied === true).map((achivied, key) => /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              title: achivied.name,\n              children: achivied.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 87,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [\"R$\", achivied.reward]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 88,\n              columnNumber: 29\n            }, this)]\n          }, key, true, {\n            fileName: _jsxFileName,\n            lineNumber: 86,\n            columnNumber: 25\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(NotAchivied, {\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            children: [\"Tarefas a concluir: \", childrenActivies.filter(item => item.achivied === false).length]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 94,\n            columnNumber: 21\n          }, this), childrenActivies.filter(item => item.achivied === false).map((notAchivied, key) => /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              title: notAchivied.name,\n              children: notAchivied.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 97,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [\"R$\", notAchivied.reward]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 98,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => handleEditing(notAchivied.id),\n              children: /*#__PURE__*/_jsxDEV(IoIosCreate, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 99,\n                columnNumber: 81\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 99,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"checkbox\",\n              onClick: e => FinishingTask(e, notAchivied)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 100,\n              columnNumber: 29\n            }, this)]\n          }, key, true, {\n            fileName: _jsxFileName,\n            lineNumber: 96,\n            columnNumber: 24\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"create-activity\",\n          onClick: () => handleAdding(children.id),\n          children: \"Criar Atividade\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 17\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 75,\n    columnNumber: 9\n  }, this);\n};\n\n_s(CardChildren, \"1kltadVHpGtoz+czGz57dHMkkcs=\");\n\n_c = CardChildren;\nexport default CardChildren;\n\nvar _c;\n\n$RefreshReg$(_c, \"CardChildren\");","map":{"version":3,"sources":["/home/gustavo/q2/gestao3/capstone-q2-educ-financeira-g4/src/Components/CardChildren/index.tsx"],"names":["useContext","useEffect","useState","ActivitiesContext","Container","Achivied","NotAchivied","Front","Back","api","ReactCardFlip","IoIosCreate","ChildrenContext","ModalContext","CardChildren","children","childrenActivies","setChildrenActivities","isFlipped","setIsFlipped","updateActivitie","getYourChildrens","createActivie","handleAdding","handleEditing","updateWallet","FinishingTask","e","task","achivied","reward","getYourActivities","id","target","checked","userId","get","headers","Authorization","localStorage","getItem","then","response","data","catch","err","console","log","handleClick","name","wallet","filter","item","length","map","key","notAchivied"],"mappings":"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","sourcesContent":["import { useContext, useEffect, useState } from \"react\"\nimport { ActivitiesContext } from \"../../Providers/Activities\"\nimport { Container, Achivied, NotAchivied , Front, Back}from \"./style.js\"\nimport api from '../../Services/api'\nimport ReactCardFlip from 'react-card-flip';\nimport { IoIosCreate } from \"react-icons/io\";\nimport { ChildrenContext } from \"../../Providers/Children\"\nimport { ModalContext } from \"../../Providers/Modal\";\ninterface Children{\n    balance:[],\n    email:string,\n    id:number,\n    parentId:number,\n    wallet:number,\n    wishlist:[],\n    name:string,\n    type: string\n}\n\ninterface CardChildrenProps{\n    children:Children\n}\n\ninterface Activities {\n    achivied: boolean\n    frequency: string\n    name: string\n    reward: number\n    userId: number,\n    id:number\n}\n\ninterface ReactFlipCardProps {\n    isFlipped:boolean,\n    flipDirection:string\n}\nconst CardChildren = ({children}:CardChildrenProps) =>{\n       \n    const [childrenActivies, setChildrenActivities] = useState<Activities[]>([])\n    const [ isFlipped, setIsFlipped ] = useState(false)\n    const { updateActivitie, getYourChildrens, createActivie } = useContext(ActivitiesContext)\n    const { handleAdding, handleEditing} = useContext(ModalContext)\n    const { updateWallet } = useContext(ChildrenContext)\n    \n    const FinishingTask = (e:any,task:Activities) =>{\n        task.achivied=true\n        updateActivitie(task)\n        updateWallet(children,task.reward)\n        getYourChildrens()\n        getYourActivities(children.id)\n        e.target.checked=false\n\n        \n\n    }\n    const getYourActivities = (userId:number) =>{\n        api\n         .get(`activities/?userId=${userId}`,{\n            headers:{\n                Authorization:`Bearer ${localStorage.getItem('token')}`\n            }\n        })\n          .then((response)=>{\n              setChildrenActivities(response.data)\n          })\n           .catch((err)=>console.log('getyourActivies', err))\n    }\n    const handleClick = () => {\n        setIsFlipped(!isFlipped)\n    }\n    useEffect(()=>{\n        getYourActivities(children.id)\n    },[createActivie])\n    return(\n        <Container>\n                <ReactCardFlip isFlipped={isFlipped} flipDirection=\"horizontal\">\n                <Front>\n                    {/* <img src='https://d3ugyf2ht6aenh.cloudfront.net/stores/001/829/347/themes/amazonas/img-1347263166-1629736427-e77800fdb2094c2bcc4fb6f44d82ce1d1629736428.jpg?1211721950' alt='img'/> */}\n                    <p>{children.name}</p>\n                    <p>R${children.wallet}</p>\n                </Front>\n            <Back>\n                <Achivied>\n                    <h2>Tarefas Concluídas: {childrenActivies.filter((item)=>item.achivied === true).length}</h2>\n                    {childrenActivies.filter((item)=>item.achivied === true).map((achivied,key)=>(\n                        <div key={key}>\n                            <p title={achivied.name}>{achivied.name}</p>\n                            <p>R${achivied.reward}</p>\n\n                        </div>\n                    ))}\n                </Achivied>\n                <NotAchivied>\n                    <h2>Tarefas a concluir: {childrenActivies.filter((item)=>item.achivied === false).length}</h2>\n                    {childrenActivies.filter((item)=>item.achivied === false).map((notAchivied,key)=>(\n                       <div key={key}>\n                            <p title={notAchivied.name}>{notAchivied.name}</p>\n                            <p>R${notAchivied.reward}</p>\n                            <button onClick={()=>handleEditing(notAchivied.id)}><IoIosCreate/></button>\n                            <input type=\"checkbox\"  onClick={(e)=>FinishingTask(e,notAchivied)}/>\n\n                       </div>\n                    ))}\n                </NotAchivied>\n                <button className='create-activity' onClick={()=>handleAdding(children.id)}>Criar Atividade</button>\n            </Back>\n            </ReactCardFlip>\n        </Container>\n    )\n}\nexport default CardChildren"]},"metadata":{},"sourceType":"module"}