{"ast":null,"code":"var _jsxFileName = \"/home/gustavo/q2/gestao3/capstone-q2-educ-financeira-g4/src/Providers/Activities/index.tsx\",\n    _s = $RefreshSig$();\n\nimport { createContext, useState } from \"react\";\nimport { toast } from \"react-toastify\";\nimport api from '../../Services/api';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const ActivitiesContext = /*#__PURE__*/createContext({});\nexport const ActivitiesProvider = ({\n  children\n}) => {\n  _s();\n\n  toast.configure();\n  const [childrenArr, setChildrenArr] = useState([]);\n  const [actualActivitieId, setActualActivitieId] = useState(0);\n  const [amountToPay, setAmountToPay] = useState(0);\n  const [userId] = useState(() => localStorage.getItem(\"userId\") || \"\");\n\n  const getYourChildrens = () => {\n    api.get(`users?parentId=${userId}`, {\n      headers: {\n        Authorization: `Bearer ${localStorage.getItem('token')}`\n      }\n    }).then(response => setChildrenArr([...response.data])).catch(err => console.log('getyourChildrens', err));\n  };\n\n  const updateActivitie = task => {\n    api.patch(`activities/${task.id}`, task, {\n      headers: {\n        Authorization: `Bearer ${localStorage.getItem('token')}`\n      }\n    }).then(response => {\n      toast.success(\"Atividade editada com sucesso\");\n    });\n  };\n\n  const createActivie = task => {\n    api.post('activities', task, {\n      headers: {\n        Authorization: `Bearer ${localStorage.getItem('token')}`\n      }\n    }).then(response => {\n      toast.success(\"Atividade criada com sucesso\");\n    });\n  };\n\n  const changingActualIdActivitie = activitieId => {\n    setActualActivitieId(activitieId);\n  };\n\n  const getAmountToPay = () => {\n    api.get(`/activities?userId=${userId}`, {\n      headers: {\n        Authorization: `Bearer ${localStorage.getItem('token')}`\n      }\n    }).then(response => {\n      setAmountToPay(response.data.filter(el => el.achivied === true).reduce((acc, val) => acc + val.reward, 0));\n    }).catch(e => {\n      console.log(e);\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(ActivitiesContext.Provider, {\n    value: {\n      getYourChildrens,\n      userId,\n      childrenArr,\n      updateActivitie,\n      getAmountToPay,\n      amountToPay,\n      changingActualIdActivitie\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 123,\n    columnNumber: 9\n  }, this);\n};\n\n_s(ActivitiesProvider, \"wPbX0L672AQIFJClpSGTg02Fo74=\");\n\n_c = ActivitiesProvider;\n\nvar _c;\n\n$RefreshReg$(_c, \"ActivitiesProvider\");","map":{"version":3,"sources":["/home/gustavo/q2/gestao3/capstone-q2-educ-financeira-g4/src/Providers/Activities/index.tsx"],"names":["createContext","useState","toast","api","ActivitiesContext","ActivitiesProvider","children","configure","childrenArr","setChildrenArr","actualActivitieId","setActualActivitieId","amountToPay","setAmountToPay","userId","localStorage","getItem","getYourChildrens","get","headers","Authorization","then","response","data","catch","err","console","log","updateActivitie","task","patch","id","success","createActivie","post","changingActualIdActivitie","activitieId","getAmountToPay","filter","el","achivied","reduce","acc","val","reward","e"],"mappings":";;;AAAA,SAASA,aAAT,EAAmCC,QAAnC,QAAmD,OAAnD;AACA,SAASC,KAAT,QAAsB,gBAAtB;AACA,OAAOC,GAAP,MAAgB,oBAAhB;;AAiDA,OAAO,MAAMC,iBAAiB,gBAAGJ,aAAa,CAAyB,EAAzB,CAAvC;AAEP,OAAO,MAAMK,kBAAkB,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAyC;AAAA;;AACvEJ,EAAAA,KAAK,CAACK,SAAN;AACA,QAAM,CAAEC,WAAF,EAAeC,cAAf,IAAkCR,QAAQ,CAAa,EAAb,CAAhD;AACA,QAAM,CAAES,iBAAF,EAAqBC,oBAArB,IAA+CV,QAAQ,CAAC,CAAD,CAA7D;AAEA,QAAM,CAACW,WAAD,EAAcC,cAAd,IAAgCZ,QAAQ,CAAM,CAAN,CAA9C;AACA,QAAM,CAAEa,MAAF,IAAab,QAAQ,CACvB,MAAMc,YAAY,CAACC,OAAb,CAAqB,QAArB,KAAkC,EADjB,CAA3B;;AAIA,QAAMC,gBAAgB,GAAG,MAAK;AAC1Bd,IAAAA,GAAG,CACDe,GADF,CACO,kBAAiBJ,MAAO,EAD/B,EACiC;AAC5BK,MAAAA,OAAO,EAAC;AACJC,QAAAA,aAAa,EAAE,UAASL,YAAY,CAACC,OAAb,CAAqB,OAArB,CAA8B;AADlD;AADoB,KADjC,EAMGK,IANH,CAMSC,QAAD,IAAab,cAAc,CAAC,CAAE,GAAGa,QAAQ,CAACC,IAAd,CAAD,CANnC,EAOIC,KAPJ,CAOWC,GAAD,IAAOC,OAAO,CAACC,GAAR,CAAY,kBAAZ,EAAgCF,GAAhC,CAPjB;AASH,GAVD;;AAYA,QAAMG,eAAe,GAAIC,IAAD,IAAoB;AACxC1B,IAAAA,GAAG,CACD2B,KADF,CACS,cAAaD,IAAI,CAACE,EAAG,EAD9B,EACiCF,IADjC,EACuC;AACnCV,MAAAA,OAAO,EAAC;AACJC,QAAAA,aAAa,EAAE,UAASL,YAAY,CAACC,OAAb,CAAqB,OAArB,CAA8B;AADlD;AAD2B,KADvC,EAMEK,IANF,CAMQC,QAAD,IAAY;AACdpB,MAAAA,KAAK,CAAC8B,OAAN,CAAc,+BAAd;AACH,KARF;AAUH,GAXD;;AAYA,QAAMC,aAAa,GAAIJ,IAAD,IAAoB;AACtC1B,IAAAA,GAAG,CACD+B,IADF,CACO,YADP,EACsBL,IADtB,EAC4B;AACxBV,MAAAA,OAAO,EAAC;AACJC,QAAAA,aAAa,EAAE,UAASL,YAAY,CAACC,OAAb,CAAqB,OAArB,CAA8B;AADlD;AADgB,KAD5B,EAMEK,IANF,CAMQC,QAAD,IAAY;AACfpB,MAAAA,KAAK,CAAC8B,OAAN,CAAc,8BAAd;AACF,KARF;AASH,GAVD;;AAYA,QAAMG,yBAAyB,GAAIC,WAAD,IAAuB;AACrDzB,IAAAA,oBAAoB,CAACyB,WAAD,CAApB;AACH,GAFD;;AAGA,QAAMC,cAAc,GAAG,MAAM;AACzBlC,IAAAA,GAAG,CACFe,GADD,CACM,sBAAqBJ,MAAO,EADlC,EACqC;AACjCK,MAAAA,OAAO,EAAC;AACJC,QAAAA,aAAa,EAAE,UAASL,YAAY,CAACC,OAAb,CAAqB,OAArB,CAA8B;AADlD;AADyB,KADrC,EAMCK,IAND,CAMMC,QAAQ,IAAI;AACdT,MAAAA,cAAc,CAACS,QAAQ,CAACC,IAAT,CAAce,MAAd,CAAsBC,EAAD,IAAqBA,EAAE,CAACC,QAAH,KAAgB,IAA1D,EACdC,MADc,CACP,CAACC,GAAD,EAAcC,GAAd,KAAmCD,GAAG,GAAGC,GAAG,CAACC,MADtC,EAC8C,CAD9C,CAAD,CAAd;AAEH,KATD,EAUCpB,KAVD,CAUOqB,CAAC,IAAI;AACRnB,MAAAA,OAAO,CAACC,GAAR,CAAYkB,CAAZ;AACH,KAZD;AAcH,GAfD;;AAmBA,sBACI,QAAC,iBAAD,CAAmB,QAAnB;AACA,IAAA,KAAK,EAAE;AAAC5B,MAAAA,gBAAD;AACPH,MAAAA,MADO;AAEPN,MAAAA,WAFO;AAGPoB,MAAAA,eAHO;AAIPS,MAAAA,cAJO;AAKPzB,MAAAA,WALO;AAMPuB,MAAAA;AANO,KADP;AAAA,cASE7B;AATF;AAAA;AAAA;AAAA;AAAA,UADJ;AAaH,CAjFM;;GAAMD,kB;;KAAAA,kB","sourcesContent":["import { createContext, ReactNode, useState } from \"react\";\nimport { toast } from \"react-toastify\";\nimport api from '../../Services/api'\n\ninterface ActivitiesProviderData {\n    getYourChildrens: ()=> void,\n    userId:string,\n    childrenArr: Children[],\n    updateActivitie: (task:Activities) => void,\n    createActivie: (task:Activities) => void,\n    actualActivitieId:number\n    changingActualIdActivitie: (activitieId:number ) => void\n    amountToPay: any;\n    getAmountToPay: () => void;\n} \n\ninterface ActivitiesProviderProps {\n    children:ReactNode\n}\n\ninterface Children {\n    balance:[],\n    email:string,\n    id:number,\n    parentId:number,\n    password:string,\n    wallet:number,\n    wishlist:[],\n    name:string,\n    type: string\n}\n\ninterface Activities {\n    achivied: boolean\n    frequency: string\n    name: string\n    reward: number\n    userId: number,\n    id?:number\n}\n\ninterface ChildrenObj {\n    achivied: boolean,\n    childrenId: number,\n    frequency: string,\n    id: number,\n    name: string,\n    reward: 1000,\n    userId: 2\n}\n\nexport const ActivitiesContext = createContext<ActivitiesProviderData>({} as ActivitiesProviderData)\n\nexport const ActivitiesProvider = ({ children }:ActivitiesProviderProps) =>{\n    toast.configure()\n    const [ childrenArr, setChildrenArr ] = useState<Children[]>([])\n    const [ actualActivitieId, setActualActivitieId ]  = useState(0) \n\n    const [amountToPay, setAmountToPay] = useState<any>(0)\n    const [ userId ] = useState(\n        () => localStorage.getItem(\"userId\") || \"\"\n    )\n\n    const getYourChildrens = () =>{\n        api\n         .get(`users?parentId=${userId}`,{\n             headers:{\n                 Authorization:`Bearer ${localStorage.getItem('token')}`\n             }\n         })\n          .then((response)=> setChildrenArr([ ...response.data]))\n           .catch((err)=>console.log('getyourChildrens', err))\n           \n    }\n\n    const updateActivitie = (task:Activities) =>{\n        api\n         .patch(`activities/${task.id}`, task, {\n            headers:{\n                Authorization:`Bearer ${localStorage.getItem('token')}`\n            }\n        })\n         .then((response)=>{\n             toast.success(\"Atividade editada com sucesso\")\n         })\n         \n    }\n    const createActivie = (task:Activities) =>{\n        api\n         .post('activities',  task, {\n            headers:{\n                Authorization:`Bearer ${localStorage.getItem('token')}`\n            }\n        })\n         .then((response)=>{\n            toast.success(\"Atividade criada com sucesso\")\n         })\n    }\n\n    const changingActualIdActivitie = (activitieId:number) =>{\n        setActualActivitieId(activitieId)\n    }\n    const getAmountToPay = () => {\n        api\n        .get(`/activities?userId=${userId}`, {\n            headers:{\n                Authorization:`Bearer ${localStorage.getItem('token')}`\n            }\n        })\n        .then(response => {\n            setAmountToPay(response.data.filter((el: ChildrenObj) => el.achivied === true)\n            .reduce((acc: number, val: ChildrenObj) => acc + val.reward, 0))\n        })\n        .catch(e => {\n            console.log(e)\n        })\n        \n    }\n\n      \n    \n    return(\n        <ActivitiesContext.Provider\n        value={{getYourChildrens, \n        userId, \n        childrenArr,\n        updateActivitie,\n        getAmountToPay,\n        amountToPay,\n        changingActualIdActivitie\n        }}>\n        { children }\n    </ActivitiesContext.Provider>\n    )\n}"]},"metadata":{},"sourceType":"module"}