{"ast":null,"code":"var _jsxFileName = \"/home/gustavo/q2/gestao3/capstone-q2-educ-financeira-g4/src/Components/Chart/index.tsx\",\n    _s = $RefreshSig$();\n\nimport { useContext, useEffect, useState } from 'react';\nimport { Chart, LineAdvance } from 'bizcharts';\nimport { UserContext } from '../../Providers/Users';\nimport { ButtonChart } from './style';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction Demo() {\n  _s();\n\n  const {\n    userData\n  } = useContext(UserContext);\n  const [sortBalance, setSortBalance] = useState([]);\n  const {\n    balance\n  } = userData;\n  const newBalance = sortBalanceByDate(balance);\n\n  function sortBalanceByDate(balance) {\n    var _balanceTypedDate, _balanceTypedDate2;\n\n    let balanceTypedDate = balance === null || balance === void 0 ? void 0 : balance.map(el => {\n      let year = Number(el.date.slice(6, 10));\n      let month = Number(el.date.slice(3, 5)) - 1;\n      let day = Number(el.date.slice(0, 2));\n      return {\n        date: new Date(year, month, day),\n        move: el.move\n      };\n    });\n    balanceTypedDate = (_balanceTypedDate = balanceTypedDate) === null || _balanceTypedDate === void 0 ? void 0 : _balanceTypedDate.sort((a, b) => {\n      return a.date - b.date;\n    });\n    let balanceTypedString = (_balanceTypedDate2 = balanceTypedDate) === null || _balanceTypedDate2 === void 0 ? void 0 : _balanceTypedDate2.map(el => {\n      return {\n        date: el.date.toLocaleDateString('pt-br').slice(0, 10),\n        move: el.move\n      };\n    });\n    return balanceTypedString;\n  }\n\n  const assembleObject = (arr, chartData) => {\n    arr.forEach(el => chartData.push({\n      date: el,\n      wallet: 'saldo',\n      total: 0\n    }));\n    return chartData;\n  };\n\n  const sumTotalWallet = (chartData, balance) => {\n    chartData.forEach(el => {\n      el.total = balance.filter(val => val.date.includes(el.date)).reduce((acc, item) => acc + item.move, 0);\n    });\n    return chartData;\n  };\n\n  const getMonthlyBalance = () => {\n    let chartData = [];\n    let filterType = [];\n    newBalance.forEach(el => {\n      !filterType.includes(el.date.slice(3, 10)) && filterType.push(el.date.slice(3, 10));\n    });\n    assembleObject(filterType, chartData);\n    sumTotalWallet(chartData, balance);\n    chartData = chartData.sort((a, b) => Number(a.date.slice(0, 2)) - Number(b.date.slice(0, 2)));\n    setSortBalance(chartData);\n  };\n\n  const getWeeklyBalance = () => {\n    let chartData = [];\n    let filterType = [];\n    newBalance.forEach(el => {\n      !filterType.includes(el.date.slice(0, 5)) && filterType.push(el.date.slice(0, 5));\n    });\n    assembleObject(filterType, chartData);\n    sumTotalWallet(chartData, balance);\n    chartData = chartData.sort((a, b) => {\n      return a.date - b.date;\n    });\n    setSortBalance(chartData);\n  };\n\n  useEffect(() => {\n    (balance === null || balance === void 0 ? void 0 : balance.length) >= 2 && getMonthlyBalance();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: (balance === null || balance === void 0 ? void 0 : balance.length) < 2 ? /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Voc\\xEA ainda n\\xE3o tem movimenta\\xE7\\xF5es o suficiente \\uD83D\\uDE28\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 5\n    }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(ButtonChart, {\n        onClick: getMonthlyBalance,\n        children: \"Anual\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 6\n      }, this), /*#__PURE__*/_jsxDEV(ButtonChart, {\n        onClick: getWeeklyBalance,\n        children: \"Mensal\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 6\n      }, this), /*#__PURE__*/_jsxDEV(Chart, {\n        padding: [10, 20, 50, 40],\n        autoFit: true,\n        height: 300,\n        data: sortBalance,\n        children: /*#__PURE__*/_jsxDEV(LineAdvance, {\n          shape: \"smooth\",\n          point: true,\n          area: true,\n          position: \"date*total\",\n          color: \"wallet\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 6\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 6\n      }, this)]\n    }, void 0, true)\n  }, void 0, false);\n}\n\n_s(Demo, \"iDdzeXxpmbLNhtCWjgvLZ9V/vxg=\");\n\n_c = Demo;\nexport default Demo;\n\nvar _c;\n\n$RefreshReg$(_c, \"Demo\");","map":{"version":3,"sources":["/home/gustavo/q2/gestao3/capstone-q2-educ-financeira-g4/src/Components/Chart/index.tsx"],"names":["useContext","useEffect","useState","Chart","LineAdvance","UserContext","ButtonChart","Demo","userData","sortBalance","setSortBalance","balance","newBalance","sortBalanceByDate","balanceTypedDate","map","el","year","Number","date","slice","month","day","Date","move","sort","a","b","balanceTypedString","toLocaleDateString","assembleObject","arr","chartData","forEach","push","wallet","total","sumTotalWallet","filter","val","includes","reduce","acc","item","getMonthlyBalance","filterType","getWeeklyBalance","length"],"mappings":"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","sourcesContent":["import { useContext, useEffect, useState } from 'react';\nimport { Chart, LineAdvance} from 'bizcharts';\nimport { Balance, UserContext } from '../../Providers/Users';\nimport { ButtonChart } from './style'\n\ninterface SortBalanceTypes {\n\tdate: string ;\n\twallet: string;\n\ttotal: number;\n}\n\ninterface BalanceDate {\n\tdate: Date;\n\tmove: number;\n}\n\nfunction Demo() {\n\tconst { userData } = useContext(UserContext);\n\tconst [sortBalance, setSortBalance] = useState<SortBalanceTypes[]>([])\n\tconst { balance } = userData;\n\tconst newBalance = sortBalanceByDate(balance);\n\n\tfunction sortBalanceByDate (balance: Balance[]) {\n\t\t\n\t\tlet balanceTypedDate = balance?.map((el: Balance) => {\n\t\t\tlet year = Number(el.date.slice(6, 10));\n\t\t\tlet month = Number(el.date.slice(3, 5)) - 1;\n\t\t\tlet day = Number(el.date.slice(0, 2));\n\n\t\t\treturn \t{\n\t\t\t\tdate: new Date(year, month , day ),\n\t\t\t\tmove: el.move\n\t\t\t}\n\t\t})\n\n\t\tbalanceTypedDate = balanceTypedDate?.sort((a: any, b: any) => {\n\t\t\treturn a.date - b.date\n\t\t})\n\n\t\tlet balanceTypedString = balanceTypedDate?.map((el: BalanceDate) => {\n\t\t\treturn\t {\n\t\t\t\tdate: el.date.toLocaleDateString('pt-br').slice(0, 10),\n\t\t\t\tmove: el.move\n\t\t\t}\n\t\t})\n\t\treturn balanceTypedString\t\t\n\t}\n\n\tconst assembleObject  = (arr: string[], chartData: SortBalanceTypes[]) => {\n\t\t\n\t\tarr.forEach((el: string) => chartData.push({\n            date: el,\n            wallet: 'saldo',\n            total: 0\n        })); \n\n\t\treturn chartData;\n\t}\n\n\tconst sumTotalWallet = (chartData: SortBalanceTypes[], balance: Balance[]) => {\n\n\t\tchartData.forEach((el) => {\n\t\t\tel.total = balance.filter((val: Balance) => val.date.includes(el.date))\n\t\t\t.reduce((acc, item) => acc + item.move, 0)\n\t\t});\n\n\t\treturn chartData;\n\t}\n\n\tconst getMonthlyBalance = () => {\n        let chartData: { date: string; wallet: string; total: number; }[] = []\n\t\tlet filterType: string[] = [];\t\t\n\n\t\tnewBalance.forEach((el: Balance) => {\n            !filterType.includes(el.date.slice(3, 10)) && filterType.push(el.date.slice(3, 10))\n        })         \n\n\t\tassembleObject(filterType, chartData)\n\n\t\tsumTotalWallet(chartData, balance)\n\n       \tchartData = chartData.sort((a: SortBalanceTypes, b: SortBalanceTypes) => Number(a.date.slice(0, 2)) - Number(b.date.slice(0, 2)))\n        \n        setSortBalance(chartData)\n\t}\n\n\tconst getWeeklyBalance = () => {\n\t\tlet chartData: { date: string; wallet: string; total: number; }[] = []\n\t\tlet filterType: string[] = []\n\n\t\tnewBalance.forEach((el: Balance) => {\n            !filterType.includes(el.date.slice(0, 5)) && filterType.push(el.date.slice(0, 5))\n        })         \n\n\t\tassembleObject(filterType, chartData)\n\n\t\tsumTotalWallet(chartData, balance)\n       \n\t\tchartData = chartData.sort((a: any, b: any) => {\n\t\t\treturn a.date - b.date\n\t\t})\n\n        setSortBalance(chartData)\n\t}\n\n\tuseEffect(() => {\n\t\t(balance?.length >=2) && getMonthlyBalance()\n\t}, [])\n\n\treturn (\n\t\t<>\n\t\t\t{balance?.length < 2? (\n\t\t\t\t<h2>Você ainda não tem movimentações o suficiente &#128552;</h2>\n\t\t\t):(\n\t\t\t\t<>\n\t\t\t\t\t<ButtonChart onClick={getMonthlyBalance}>Anual</ButtonChart>\n\t\t\t\t\t<ButtonChart onClick={getWeeklyBalance}>Mensal</ButtonChart>\n\t\t\t\t\t<Chart padding={[10, 20, 50, 40]} autoFit height={300} data={sortBalance} >\n\t\t\t\t\t<LineAdvance\n\t\t\t\t\t\tshape=\"smooth\"\n\t\t\t\t\t\tpoint\n\t\t\t\t\t\tarea\n\t\t\t\t\t\tposition=\"date*total\"\n\t\t\t\t\t\tcolor=\"wallet\"\n\t\t\t\t\t/>\t\n\t\t\t\t\t</Chart>\n\t\t\t\t</>\n\t\t\t)}\n\t\t</>\n\t)\n}\n\n\nexport default Demo"]},"metadata":{},"sourceType":"module"}