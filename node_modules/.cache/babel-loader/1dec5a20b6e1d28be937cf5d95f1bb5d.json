{"ast":null,"code":"var _jsxFileName = \"/home/gustavo/q2/gestao3/capstone-q2-educ-financeira-g4/src/Pages/Balance/index.tsx\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { Container, ModalBalance, Button, BankStatement, Input, Chart, LeftSide, RightSide, WishList, WishListHeader, WishListContent } from \"./styles\";\nimport { useState, useEffect } from \"react\";\nimport { CardWish } from \"../../Components/CardWish\";\nimport { useUser } from \"../../Providers/Users\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const Balance = () => {\n  _s();\n\n  const [isOpenBalance, setIsOpenBalance] = useState(false);\n  const [isOpenWish, setIsOpenWish] = useState(false);\n  const {\n    userData,\n    getUserData,\n    ReceivedBalance,\n    SpendBalance,\n    AddWishList\n  } = useUser();\n  const [received, setReceived] = useState(0);\n  const [spend, setSpend] = useState(0);\n  const [wishName, setWishName] = useState(\"\");\n  const [wishPrice, setWishPrice] = useState(0);\n\n  const HandleClickBalance = () => {\n    spend !== 0 && SpendBalance(userData, spend);\n    received !== 0 && ReceivedBalance(userData, received);\n    setSpend(0);\n    setReceived(0);\n  };\n\n  const HandleClickWish = () => {\n    const wish = {\n      name: wishName,\n      value: wishPrice\n    };\n    console.log(wish);\n    AddWishList(userData, wish);\n  };\n\n  useEffect(() => {\n    getUserData();\n  }, []);\n  console.log(userData);\n  return /*#__PURE__*/_jsxDEV(Container, {\n    children: [/*#__PURE__*/_jsxDEV(LeftSide, {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Patrim\\xF4nio Total Acumulado\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Chart, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        onClick: () => setIsOpenBalance(!isOpenBalance),\n        children: \"Movimenta\\xE7\\xF5es\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }, this), isOpenBalance && /*#__PURE__*/_jsxDEV(ModalBalance, {\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Balan\\xE7o Financeiras\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(BankStatement, {\n          children: userData.balance ? userData.balance.map((item, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              children: item.date\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 73,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"strong\", {\n              children: [\" R$ \", item.move && item.move.toFixed(2).replace(\".\", \",\")]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 74,\n              columnNumber: 21\n            }, this)]\n          }, index, true, {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 19\n          }, this)) : /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"\\\"Sem movimenta\\xE7\\xF5es!\\\"\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 81,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n          children: `Saldo:   ${userData.wallet.toFixed(2).replace(\".\", \",\")}`\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Recebido\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Input, {\n          placeholder: \"Recebido\",\n          onChange: e => {\n            setReceived(Number(e.target.value));\n            console.log(e.target.value);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"secondLabel\",\n          children: \"Pago\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Input, {\n          placeholder: \"Pago\",\n          onChange: e => setSpend(Number(e.target.value) * -1)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          onClick: () => HandleClickBalance(),\n          children: \"Enviar\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          onClick: () => setIsOpenBalance(!isOpenBalance),\n          children: \"Sair\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(RightSide, {\n      children: [/*#__PURE__*/_jsxDEV(WishList, {\n        children: [/*#__PURE__*/_jsxDEV(WishListHeader, {\n          children: isOpenWish ? /*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"Criar novo desejo\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 111,\n            columnNumber: 15\n          }, this) : /*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"Lista de desejsssos\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 113,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 11\n        }, this), isOpenWish ? /*#__PURE__*/_jsxDEV(WishListContent, {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Nome do item\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 118,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Input, {\n            placeholder: \"nome\",\n            onChange: e => setWishName(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 119,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Valor do item\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 123,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Input, {\n            placeholder: \"valor\",\n            onChange: e => setWishPrice(Number(e.target.value))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 124,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            onClick: () => HandleClickWish(),\n            children: \"Enviar\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 128,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 13\n        }, this) : /*#__PURE__*/_jsxDEV(WishListContent, {\n          children: userData.wishlist.map((item, index) => /*#__PURE__*/_jsxDEV(CardWish, {\n            id: \"wishlist\",\n            item: item\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 133,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 131,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        onClick: () => setIsOpenWish(!isOpenWish),\n        children: isOpenWish ? \"Fechar criar desejo\" : \"Criar desejo\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 59,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Balance, \"FDxpKNwho2t3HU+yti97P3oUmkM=\", false, function () {\n  return [useUser];\n});\n\n_c = Balance;\n\nvar _c;\n\n$RefreshReg$(_c, \"Balance\");","map":{"version":3,"sources":["/home/gustavo/q2/gestao3/capstone-q2-educ-financeira-g4/src/Pages/Balance/index.tsx"],"names":["React","Container","ModalBalance","Button","BankStatement","Input","Chart","LeftSide","RightSide","WishList","WishListHeader","WishListContent","useState","useEffect","CardWish","useUser","Balance","isOpenBalance","setIsOpenBalance","isOpenWish","setIsOpenWish","userData","getUserData","ReceivedBalance","SpendBalance","AddWishList","received","setReceived","spend","setSpend","wishName","setWishName","wishPrice","setWishPrice","HandleClickBalance","HandleClickWish","wish","name","value","console","log","balance","map","item","index","date","move","toFixed","replace","wallet","e","Number","target","wishlist"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport {\n  Container,\n  ModalBalance,\n  Button,\n  BankStatement,\n  Input,\n  Chart,\n  LeftSide,\n  RightSide,\n  WishList,\n  WishListHeader,\n  WishListContent,\n} from \"./styles\";\nimport { useState, useEffect } from \"react\";\nimport { CardWish } from \"../../Components/CardWish\";\nimport { useUser } from \"../../Providers/Users\";\nimport { CardWishDetails } from \"../../Components/CardWishDetails\";\ninterface BalanceProp {\n  date?: string;\n  move?: number;\n}\n\ninterface Wish {\n  name: string;\n  value: number;\n}\n\nexport const Balance = () => {\n  const [isOpenBalance, setIsOpenBalance] = useState(false);\n  const [isOpenWish, setIsOpenWish] = useState(false);\n  const { userData, getUserData, ReceivedBalance, SpendBalance, AddWishList } =\n    useUser();\n\n  const [received, setReceived] = useState(0);\n  const [spend, setSpend] = useState(0);\n  const [wishName, setWishName] = useState(\"\");\n  const [wishPrice, setWishPrice] = useState(0);\n\n  const HandleClickBalance = () => {\n    spend !== 0 && SpendBalance(userData, spend);\n    received !== 0 && ReceivedBalance(userData, received);\n    setSpend(0);\n    setReceived(0);\n  };\n\n  const HandleClickWish = () => {\n    const wish = { name: wishName, value: wishPrice };\n    console.log(wish);\n    AddWishList(userData, wish);\n  };\n\n  useEffect(() => {\n    getUserData();\n  }, []);\n\n  console.log(userData);\n  return (\n    <Container>\n      <LeftSide>\n        <h2>Patrimônio Total Acumulado</h2>\n        <Chart></Chart>\n        <Button onClick={() => setIsOpenBalance(!isOpenBalance)}>\n          Movimentações\n        </Button>\n        {isOpenBalance && (\n          <ModalBalance>\n            <h2>Balanço Financeiras</h2>\n            <BankStatement>\n              {userData.balance ? (\n                userData.balance.map((item: BalanceProp, index: number) => (\n                  <li key={index}>\n                    <span>{item.date}</span>\n                    <strong>\n                      {\" R$ \"}\n                      {item.move && item.move.toFixed(2).replace(\".\", \",\")}\n                    </strong>\n                  </li>\n                ))\n              ) : (\n                <p>\"Sem movimentações!\"</p>\n              )}\n            </BankStatement>\n            <h2>{`Saldo:   ${userData.wallet\n              .toFixed(2)\n              .replace(\".\", \",\")}`}</h2>\n            <label>Recebido</label>\n            <Input\n              placeholder=\"Recebido\"\n              onChange={(e) => {\n                setReceived(Number(e.target.value));\n                console.log(e.target.value);\n              }}\n            />\n            <label className=\"secondLabel\">Pago</label>\n            <Input\n              placeholder=\"Pago\"\n              onChange={(e) => setSpend(Number(e.target.value) * -1)}\n            />\n            <Button onClick={() => HandleClickBalance()}>Enviar</Button>\n            <Button onClick={() => setIsOpenBalance(!isOpenBalance)}>\n              Sair\n            </Button>\n          </ModalBalance>\n        )}\n      </LeftSide>\n      <RightSide>\n        <WishList>\n          <WishListHeader>\n            {isOpenWish ? (\n              <h3>Criar novo desejo</h3>\n            ) : (\n              <h3>Lista de desejsssos</h3>\n            )}\n          </WishListHeader>\n          {isOpenWish ? (\n            <WishListContent>\n              <label>Nome do item</label>\n              <Input\n                placeholder=\"nome\"\n                onChange={(e) => setWishName(e.target.value)}\n              />\n              <label>Valor do item</label>\n              <Input\n                placeholder=\"valor\"\n                onChange={(e) => setWishPrice(Number(e.target.value))}\n              />\n              <Button onClick={() => HandleClickWish()}>Enviar</Button>\n            </WishListContent>\n          ) : (\n            <WishListContent>\n              {userData.wishlist.map((item: Wish, index: number) => (\n                <CardWish id=\"wishlist\" key={index} item={item} />\n              ))}\n            </WishListContent>\n          )}\n        </WishList>\n        <Button onClick={() => setIsOpenWish(!isOpenWish)}>\n          {isOpenWish ? \"Fechar criar desejo\" : \"Criar desejo\"}\n        </Button>\n      </RightSide>\n    </Container>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}