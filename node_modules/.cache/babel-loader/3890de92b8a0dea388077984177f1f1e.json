{"ast":null,"code":"var _jsxFileName = \"/home/gustavo/q2/gestao3/capstone-q2-educ-financeira-g4/src/Providers/Toasts/index.tsx\";\nimport { createContext } from \"react\";\nimport { toast } from 'react-toastify';\nimport svgCry from '../../assets/images/crying.png';\nimport svgHappy from '../../assets/images/happy.png';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const ToastContext = /*#__PURE__*/createContext({});\nexport const ToastProvider = ({\n  children\n}) => {\n  toast.configure();\n\n  const ToastSuccess = text => {\n    toast.success(`${text}`, {\n      icon: () => /*#__PURE__*/_jsxDEV(\"img\", {\n        src: svgHappy,\n        alt: \"happy kid\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 26\n      }, this)\n    });\n  };\n\n  const ToastError = text => {\n    toast.error(`${text}`, {\n      icon: () => /*#__PURE__*/_jsxDEV(\"img\", {\n        src: svgCry,\n        alt: \"crying kid\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 26\n      }, this)\n    });\n  };\n\n  const toastWarning = text => {\n    toast.error(`${text}`, {\n      icon: () => /*#__PURE__*/_jsxDEV(\"img\", {\n        src: svgCry,\n        alt: \"crying kid\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 26\n      }, this)\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(ToastContext.Provider, {\n    value: {\n      ToastSuccess,\n      ToastError,\n      toastWarning\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 9\n  }, this);\n};\n_c = ToastProvider;\n\nvar _c;\n\n$RefreshReg$(_c, \"ToastProvider\");","map":{"version":3,"sources":["/home/gustavo/q2/gestao3/capstone-q2-educ-financeira-g4/src/Providers/Toasts/index.tsx"],"names":["createContext","toast","svgCry","svgHappy","ToastContext","ToastProvider","children","configure","ToastSuccess","text","success","icon","ToastError","error","toastWarning"],"mappings":";AAAA,SAASA,aAAT,QAAyC,OAAzC;AACA,SAASC,KAAT,QAAsB,gBAAtB;AACA,OAAOC,MAAP,MAAmB,gCAAnB;AACA,OAAOC,QAAP,MAAqB,+BAArB;;AAUA,OAAO,MAAMC,YAAY,gBAAGJ,aAAa,CAAC,EAAD,CAAlC;AAEP,OAAO,MAAMK,aAAa,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAoC;AAC7DL,EAAAA,KAAK,CAACM,SAAN;;AACA,QAAMC,YAAY,GAAIC,IAAD,IAAgB;AACjCR,IAAAA,KAAK,CAACS,OAAN,CAAe,GAAED,IAAK,EAAtB,EAAyB;AACrBE,MAAAA,IAAI,EAAE,mBAAO;AAAK,QAAA,GAAG,EAAER,QAAV;AAAoB,QAAA,GAAG,EAAC;AAAxB;AAAA;AAAA;AAAA;AAAA;AADQ,KAAzB;AAGH,GAJD;;AAKA,QAAMS,UAAU,GAAIH,IAAD,IAAgB;AAC/BR,IAAAA,KAAK,CAACY,KAAN,CAAa,GAAEJ,IAAK,EAApB,EAAuB;AACnBE,MAAAA,IAAI,EAAE,mBAAO;AAAK,QAAA,GAAG,EAAET,MAAV;AAAkB,QAAA,GAAG,EAAC;AAAtB;AAAA;AAAA;AAAA;AAAA;AADM,KAAvB;AAGH,GAJD;;AAKA,QAAMY,YAAY,GAAIL,IAAD,IAAgB;AACjCR,IAAAA,KAAK,CAACY,KAAN,CAAa,GAAEJ,IAAK,EAApB,EAAuB;AACnBE,MAAAA,IAAI,EAAE,mBAAO;AAAK,QAAA,GAAG,EAAET,MAAV;AAAkB,QAAA,GAAG,EAAC;AAAtB;AAAA;AAAA;AAAA;AAAA;AADM,KAAvB;AAGH,GAJD;;AAMA,sBACI,QAAC,YAAD,CAAc,QAAd;AAAuB,IAAA,KAAK,EAAI;AAACM,MAAAA,YAAD;AAAcI,MAAAA,UAAd;AAAyBE,MAAAA;AAAzB,KAAhC;AAAA,cACMR;AADN;AAAA;AAAA;AAAA;AAAA,UADJ;AAKH,CAvBM;KAAMD,a","sourcesContent":["import { createContext, ReactNode } from \"react\";\nimport { toast } from 'react-toastify'\nimport svgCry from '../../assets/images/crying.png'\nimport svgHappy from '../../assets/images/happy.png'\n\ninterface ToastProviderProps{\n    children:ReactNode\n}\ninterface ToastProviderData{\n    ToastSuccess: (text:string) => void,\n    ToastError:(text:string)=> void,\n    toastWarning:(text:string) => void,\n}\nexport const ToastContext = createContext({} as ToastProviderData)\n\nexport const ToastProvider = ({ children }:ToastProviderProps) =>{\n    toast.configure()\n    const ToastSuccess = (text:string) =>{\n        toast.success(`${text}`, {\n            icon: () =>  <img src={svgHappy} alt='happy kid'/>\n          });\n    }\n    const ToastError = (text:string) =>{\n        toast.error(`${text}`, {\n            icon: () =>  <img src={svgCry} alt='crying kid'/>\n          });\n    }\n    const toastWarning = (text:string) =>{\n        toast.error(`${text}`, {\n            icon: () =>  <img src={svgCry} alt='crying kid'/>\n          });\n    }\n\n    return(\n        <ToastContext.Provider value = {{ToastSuccess,ToastError,toastWarning}}>\n            { children }\n        </ToastContext.Provider>\n    )\n}"]},"metadata":{},"sourceType":"module"}