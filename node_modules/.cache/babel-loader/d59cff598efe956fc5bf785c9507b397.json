{"ast":null,"code":"var _jsxFileName = \"/home/gustavo/q2/gestao3/capstone-q2-educ-financeira-g4/src/Providers/Modal/index.tsx\",\n    _s = $RefreshSig$();\n\nimport { createContext, useContext, useState } from \"react\";\nimport { ActivitiesContext } from \"../Activities\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const ModalContext = /*#__PURE__*/createContext({});\nexport const ModalProvider = ({\n  children\n}) => {\n  _s();\n\n  const {\n    createActivie\n  } = useContext(ActivitiesContext);\n  const [isEditing, setIsEditing] = useState(false);\n  const [isAdding, setIsAdding] = useState(false);\n\n  const handleEditing = () => {\n    setIsEditing(!isEditing);\n  };\n\n  const handleAdding = () => {\n    setIsAdding(!isAdding);\n  };\n\n  return /*#__PURE__*/_jsxDEV(ModalContext.Provider, {\n    value: {\n      handleEditing,\n      isEditing,\n      handleAdding,\n      isAdding\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 9\n  }, this);\n};\n\n_s(ModalProvider, \"MlJGKUMBKQYI9mXuw3J0u9DHQNU=\");\n\n_c = ModalProvider;\n\nvar _c;\n\n$RefreshReg$(_c, \"ModalProvider\");","map":{"version":3,"sources":["/home/gustavo/q2/gestao3/capstone-q2-educ-financeira-g4/src/Providers/Modal/index.tsx"],"names":["createContext","useContext","useState","ActivitiesContext","ModalContext","ModalProvider","children","createActivie","isEditing","setIsEditing","isAdding","setIsAdding","handleEditing","handleAdding"],"mappings":";;;AAAA,SAASA,aAAT,EAAoCC,UAApC,EAAiDC,QAAjD,QAAiE,OAAjE;AACA,SAASC,iBAAT,QAAkC,eAAlC;;AA0BA,OAAO,MAAMC,YAAY,gBAAGJ,aAAa,CAAqB,EAArB,CAAlC;AAEP,OAAO,MAAMK,aAAa,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAqC;AAAA;;AAC9D,QAAM;AAAEC,IAAAA;AAAF,MAAoBN,UAAU,CAACE,iBAAD,CAApC;AACA,QAAM,CAAEK,SAAF,EAAaC,YAAb,IAA8BP,QAAQ,CAAC,KAAD,CAA5C;AACA,QAAM,CAAEQ,QAAF,EAAYC,WAAZ,IAA4BT,QAAQ,CAAC,KAAD,CAA1C;;AAEA,QAAMU,aAAa,GAAG,MAAK;AACvBH,IAAAA,YAAY,CAAC,CAACD,SAAF,CAAZ;AACH,GAFD;;AAIA,QAAMK,YAAY,GAAG,MAAK;AACtBF,IAAAA,WAAW,CAAC,CAACD,QAAF,CAAX;AAEH,GAHD;;AAIA,sBACI,QAAC,YAAD,CAAc,QAAd;AAAuB,IAAA,KAAK,EAAE;AAAEE,MAAAA,aAAF;AAAiBJ,MAAAA,SAAjB;AAA4BK,MAAAA,YAA5B;AAA0CH,MAAAA;AAA1C,KAA9B;AAAA,cACMJ;AADN;AAAA;AAAA;AAAA;AAAA,UADJ;AAKH,CAlBM;;GAAMD,a;;KAAAA,a","sourcesContent":["import { createContext, ReactNode,  useContext,  useState } from \"react\";\nimport { ActivitiesContext } from \"../Activities\";\nimport { ChildrenContext } from \"../Children\";\n\ninterface ModalProviderProps{\n    children:ReactNode\n}\ninterface ModalProviderData{\n    handleEditing : () => void,\n    isEditing: boolean\n\n    handleAdding : () => void\n    isAdding: boolean \n}\ninterface Children{\n    email:string,\n    name: string,\n    wallet: number,\n    type: string,\n    wishlist?: [],\n    balance?: [],\n    id: number,\n    parentId: number\n\n    \n}\n\nexport const ModalContext = createContext <ModalProviderData>({} as ModalProviderData)\n\nexport const ModalProvider = ({ children }: ModalProviderProps) =>{\n    const { createActivie } = useContext(ActivitiesContext)\n    const [ isEditing, setIsEditing ] = useState(false)\n    const [ isAdding, setIsAdding ] = useState(false)\n    \n    const handleEditing = () =>{\n        setIsEditing(!isEditing)\n    }\n\n    const handleAdding = () =>{\n        setIsAdding(!isAdding)\n        \n    }\n    return(\n        <ModalContext.Provider value={{ handleEditing, isEditing, handleAdding, isAdding}}>\n            { children }\n        </ModalContext.Provider>\n    )\n}\n\n"]},"metadata":{},"sourceType":"module"}