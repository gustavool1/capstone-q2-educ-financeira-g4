{"ast":null,"code":"var _jsxFileName = \"/home/gustavo/q2/gestao3/capstone-q2-educ-financeira-g4/src/Providers/Activities/index.tsx\",\n    _s = $RefreshSig$();\n\nimport { createContext, useState } from \"react\";\nimport { toast } from \"react-toastify\";\nimport api from '../../Services/api';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const ActivitiesContext = /*#__PURE__*/createContext({});\nexport const ActivitiesProvider = ({\n  children\n}) => {\n  _s();\n\n  toast.configure();\n  const [childrenArr, setChildrenArr] = useState([]);\n  const [actualActivitieId, setActualActivitieId] = useState(0);\n  const [userId] = useState(() => localStorage.getItem(\"userId\") || \"\");\n\n  const getYourChildrens = () => {\n    api.get(`users?parentId=${userId}`, {\n      headers: {\n        Authorization: `Bearer ${localStorage.getItem('token')}`\n      }\n    }).then(response => setChildrenArr([...response.data])).catch(err => console.log('getyourChildrens', err));\n  };\n\n  const updateActivitie = task => {\n    api.patch(`activities/${task.id}`, task, {\n      headers: {\n        Authorization: `Bearer ${localStorage.getItem('token')}`\n      }\n    }).then(response => {\n      toast.success(\"Atividade editada com sucesso\");\n    });\n  };\n\n  const createActivie = task => {\n    api.post('activities', task, {\n      headers: {\n        Authorization: `Bearer ${localStorage.getItem('token')}`\n      }\n    }).then(response => {\n      toast.success(\"Atividade criada com sucesso\");\n    });\n  };\n\n  const changingActualIdActivitie = activitieId => {\n    setActualActivitieId(activitieId);\n  };\n\n  return /*#__PURE__*/_jsxDEV(ActivitiesContext.Provider, {\n    value: {\n      getYourChildrens,\n      userId,\n      childrenArr,\n      updateActivitie,\n      createActivie,\n      changingActualIdActivitie,\n      actualActivitieId\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 88,\n    columnNumber: 9\n  }, this);\n};\n\n_s(ActivitiesProvider, \"uX8bqWDBWpXQw3xifOne3j7kIUE=\");\n\n_c = ActivitiesProvider;\n\nvar _c;\n\n$RefreshReg$(_c, \"ActivitiesProvider\");","map":{"version":3,"sources":["/home/gustavo/q2/gestao3/capstone-q2-educ-financeira-g4/src/Providers/Activities/index.tsx"],"names":["createContext","useState","toast","api","ActivitiesContext","ActivitiesProvider","children","configure","childrenArr","setChildrenArr","actualActivitieId","setActualActivitieId","userId","localStorage","getItem","getYourChildrens","get","headers","Authorization","then","response","data","catch","err","console","log","updateActivitie","task","patch","id","success","createActivie","post","changingActualIdActivitie","activitieId"],"mappings":";;;AAAA,SAASA,aAAT,EAAmCC,QAAnC,QAAmD,OAAnD;AACA,SAASC,KAAT,QAAsB,gBAAtB;AACA,OAAOC,GAAP,MAAgB,oBAAhB;;AAmCA,OAAO,MAAMC,iBAAiB,gBAAGJ,aAAa,CAAyB,EAAzB,CAAvC;AAEP,OAAO,MAAMK,kBAAkB,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAyC;AAAA;;AACvEJ,EAAAA,KAAK,CAACK,SAAN;AACA,QAAM,CAAEC,WAAF,EAAeC,cAAf,IAAkCR,QAAQ,CAAa,EAAb,CAAhD;AACA,QAAM,CAAES,iBAAF,EAAqBC,oBAArB,IAA+CV,QAAQ,CAAC,CAAD,CAA7D;AAEA,QAAM,CAAEW,MAAF,IAAaX,QAAQ,CACvB,MAAMY,YAAY,CAACC,OAAb,CAAqB,QAArB,KAAkC,EADjB,CAA3B;;AAGA,QAAMC,gBAAgB,GAAG,MAAK;AAC1BZ,IAAAA,GAAG,CACDa,GADF,CACO,kBAAiBJ,MAAO,EAD/B,EACiC;AAC5BK,MAAAA,OAAO,EAAC;AACJC,QAAAA,aAAa,EAAE,UAASL,YAAY,CAACC,OAAb,CAAqB,OAArB,CAA8B;AADlD;AADoB,KADjC,EAMGK,IANH,CAMSC,QAAD,IAAaX,cAAc,CAAC,CAAE,GAAGW,QAAQ,CAACC,IAAd,CAAD,CANnC,EAOIC,KAPJ,CAOWC,GAAD,IAAOC,OAAO,CAACC,GAAR,CAAY,kBAAZ,EAAgCF,GAAhC,CAPjB;AASH,GAVD;;AAWA,QAAMG,eAAe,GAAIC,IAAD,IAAoB;AACxCxB,IAAAA,GAAG,CACDyB,KADF,CACS,cAAaD,IAAI,CAACE,EAAG,EAD9B,EACiCF,IADjC,EACuC;AACnCV,MAAAA,OAAO,EAAC;AACJC,QAAAA,aAAa,EAAE,UAASL,YAAY,CAACC,OAAb,CAAqB,OAArB,CAA8B;AADlD;AAD2B,KADvC,EAMEK,IANF,CAMQC,QAAD,IAAY;AACdlB,MAAAA,KAAK,CAAC4B,OAAN,CAAc,+BAAd;AACH,KARF;AAUH,GAXD;;AAYA,QAAMC,aAAa,GAAIJ,IAAD,IAAoB;AACtCxB,IAAAA,GAAG,CACD6B,IADF,CACO,YADP,EACsBL,IADtB,EAC4B;AACxBV,MAAAA,OAAO,EAAC;AACJC,QAAAA,aAAa,EAAE,UAASL,YAAY,CAACC,OAAb,CAAqB,OAArB,CAA8B;AADlD;AADgB,KAD5B,EAMEK,IANF,CAMQC,QAAD,IAAY;AACflB,MAAAA,KAAK,CAAC4B,OAAN,CAAc,8BAAd;AACF,KARF;AASH,GAVD;;AAYA,QAAMG,yBAAyB,GAAIC,WAAD,IAAuB;AACrDvB,IAAAA,oBAAoB,CAACuB,WAAD,CAApB;AACH,GAFD;;AAIA,sBACI,QAAC,iBAAD,CAAmB,QAAnB;AAA4B,IAAA,KAAK,EAAE;AAACnB,MAAAA,gBAAD;AAAmBH,MAAAA,MAAnB;AAA2BJ,MAAAA,WAA3B;AAAuCkB,MAAAA,eAAvC;AAAwDK,MAAAA,aAAxD;AAAuEE,MAAAA,yBAAvE;AAAkGvB,MAAAA;AAAlG,KAAnC;AAAA,cACMJ;AADN;AAAA;AAAA;AAAA;AAAA,UADJ;AAKH,CApDM;;GAAMD,kB;;KAAAA,kB","sourcesContent":["import { createContext, ReactNode, useState } from \"react\";\nimport { toast } from \"react-toastify\";\nimport api from '../../Services/api'\n\ninterface ActivitiesProviderData{\n    getYourChildrens: ()=> void,\n    userId:string,\n    childrenArr: Children[],\n    updateActivitie: (task:Activities) => void,\n    createActivie: (task:Activities) => void,\n    actualActivitieId:number\n    changingActualIdActivitie: (activitieId:number ) => void\n} \ninterface ActivitiesProviderProps{\n    children:ReactNode\n}\ninterface Children{\n        balance:[],\n        email:string,\n        id:number,\n        parentId:number,\n        password:string,\n        wallet:number,\n        wishlist:[],\n        name:string,\n        type: string\n}\ninterface Activities {\n    achivied: boolean\n    frequency: string\n    name: string\n    reward: number\n    userId: number,\n    id?:number\n}\n\n\nexport const ActivitiesContext = createContext<ActivitiesProviderData>({} as ActivitiesProviderData)\n\nexport const ActivitiesProvider = ({ children }:ActivitiesProviderProps) =>{\n    toast.configure()\n    const [ childrenArr, setChildrenArr ] = useState<Children[]>([])\n    const [ actualActivitieId, setActualActivitieId ]  = useState(0) \n\n    const [ userId ] = useState(\n        () => localStorage.getItem(\"userId\") || \"\"\n    )\n    const getYourChildrens = () =>{\n        api\n         .get(`users?parentId=${userId}`,{\n             headers:{\n                 Authorization:`Bearer ${localStorage.getItem('token')}`\n             }\n         })\n          .then((response)=> setChildrenArr([ ...response.data]))\n           .catch((err)=>console.log('getyourChildrens', err))\n           \n    }\n    const updateActivitie = (task:Activities) =>{\n        api\n         .patch(`activities/${task.id}`, task, {\n            headers:{\n                Authorization:`Bearer ${localStorage.getItem('token')}`\n            }\n        })\n         .then((response)=>{\n             toast.success(\"Atividade editada com sucesso\")\n         })\n         \n    }\n    const createActivie = (task:Activities) =>{\n        api\n         .post('activities',  task, {\n            headers:{\n                Authorization:`Bearer ${localStorage.getItem('token')}`\n            }\n        })\n         .then((response)=>{\n            toast.success(\"Atividade criada com sucesso\")\n         })\n    }\n\n    const changingActualIdActivitie = (activitieId:number) =>{\n        setActualActivitieId(activitieId)\n    }\n    \n    return(\n        <ActivitiesContext.Provider value={{getYourChildrens, userId, childrenArr,updateActivitie, createActivie, changingActualIdActivitie, actualActivitieId}}>\n            { children }\n        </ActivitiesContext.Provider>\n    )\n}"]},"metadata":{},"sourceType":"module"}