[{"/home/gustavo/q2/gestao3/capstone-q2-educ-financeira-g4/src/index.tsx":"1","/home/gustavo/q2/gestao3/capstone-q2-educ-financeira-g4/src/App.tsx":"2","/home/gustavo/q2/gestao3/capstone-q2-educ-financeira-g4/src/GlobalStyle/index.tsx":"3","/home/gustavo/q2/gestao3/capstone-q2-educ-financeira-g4/src/Providers/index.tsx":"4","/home/gustavo/q2/gestao3/capstone-q2-educ-financeira-g4/src/Routes/index.tsx":"5","/home/gustavo/q2/gestao3/capstone-q2-educ-financeira-g4/src/Providers/Users/index.tsx":"6","/home/gustavo/q2/gestao3/capstone-q2-educ-financeira-g4/src/Services/api.ts":"7","/home/gustavo/q2/gestao3/capstone-q2-educ-financeira-g4/src/Pages/ContentHome/index.tsx":"8","/home/gustavo/q2/gestao3/capstone-q2-educ-financeira-g4/src/Pages/Balance/index.tsx":"9","/home/gustavo/q2/gestao3/capstone-q2-educ-financeira-g4/src/Pages/DashboardKids/index.tsx":"10","/home/gustavo/q2/gestao3/capstone-q2-educ-financeira-g4/src/Pages/Home/index.tsx":"11","/home/gustavo/q2/gestao3/capstone-q2-educ-financeira-g4/src/Pages/RegisterKids/index.tsx":"12","/home/gustavo/q2/gestao3/capstone-q2-educ-financeira-g4/src/Pages/Login/index.tsx":"13","/home/gustavo/q2/gestao3/capstone-q2-educ-financeira-g4/src/Pages/RegisterParents/index.tsx":"14","/home/gustavo/q2/gestao3/capstone-q2-educ-financeira-g4/src/Pages/DashboardParents/index.tsx":"15","/home/gustavo/q2/gestao3/capstone-q2-educ-financeira-g4/src/Pages/RegisterKids/styles.ts":"16","/home/gustavo/q2/gestao3/capstone-q2-educ-financeira-g4/src/Pages/RegisterParents/styles.ts":"17","/home/gustavo/q2/gestao3/capstone-q2-educ-financeira-g4/src/Components/LottieMaker/index.tsx":"18","/home/gustavo/q2/gestao3/capstone-q2-educ-financeira-g4/src/Components/NavbarHome/index.tsx":"19","/home/gustavo/q2/gestao3/capstone-q2-educ-financeira-g4/src/Components/NavbarHome/menuList.tsx":"20","/home/gustavo/q2/gestao3/capstone-q2-educ-financeira-g4/src/Pages/Login/styles.ts":"21","/home/gustavo/q2/gestao3/capstone-q2-educ-financeira-g4/src/Providers/Activities/index.tsx":"22","/home/gustavo/q2/gestao3/capstone-q2-educ-financeira-g4/src/Components/ListChildren/index.tsx":"23","/home/gustavo/q2/gestao3/capstone-q2-educ-financeira-g4/src/Components/CardChildren/index.tsx":"24","/home/gustavo/q2/gestao3/capstone-q2-educ-financeira-g4/src/Providers/Children/index.tsx":"25","/home/gustavo/q2/gestao3/capstone-q2-educ-financeira-g4/src/Pages/Home/style.ts":"26","/home/gustavo/q2/gestao3/capstone-q2-educ-financeira-g4/src/Routes/routes.tsx":"27","/home/gustavo/q2/gestao3/capstone-q2-educ-financeira-g4/src/Components/NavbarHome/style.ts":"28","/home/gustavo/q2/gestao3/capstone-q2-educ-financeira-g4/src/Pages/Balance/styles.ts":"29","/home/gustavo/q2/gestao3/capstone-q2-educ-financeira-g4/src/Components/ProfileBarParents/index.tsx":"30","/home/gustavo/q2/gestao3/capstone-q2-educ-financeira-g4/src/Components/ProfileBarParents/style.ts":"31","/home/gustavo/q2/gestao3/capstone-q2-educ-financeira-g4/src/Components/ListChildren/style.js":"32","/home/gustavo/q2/gestao3/capstone-q2-educ-financeira-g4/src/Components/NavbarHome/menuParentsLogin.tsx":"33","/home/gustavo/q2/gestao3/capstone-q2-educ-financeira-g4/src/Components/NavbarHome/menuChildrensLogin.tsx":"34","/home/gustavo/q2/gestao3/capstone-q2-educ-financeira-g4/src/Providers/Modal/index.tsx":"35","/home/gustavo/q2/gestao3/capstone-q2-educ-financeira-g4/src/Components/ProfileBarChildren/index.tsx":"36","/home/gustavo/q2/gestao3/capstone-q2-educ-financeira-g4/src/Components/FormCreatingActivity/index.tsx":"37","/home/gustavo/q2/gestao3/capstone-q2-educ-financeira-g4/src/Components/FormEditingActivity/index.tsx":"38","/home/gustavo/q2/gestao3/capstone-q2-educ-financeira-g4/src/Components/FormCreatingActivity/style.js":"39","/home/gustavo/q2/gestao3/capstone-q2-educ-financeira-g4/src/Components/FormEditingActivity/style.js":"40","/home/gustavo/q2/gestao3/capstone-q2-educ-financeira-g4/src/Components/ProfileBarChildren/style.ts":"41","/home/gustavo/q2/gestao3/capstone-q2-educ-financeira-g4/src/Components/CardWish/index.tsx":"42","/home/gustavo/q2/gestao3/capstone-q2-educ-financeira-g4/src/Components/CardWish/styles.ts":"43","/home/gustavo/q2/gestao3/capstone-q2-educ-financeira-g4/src/Components/CardWishDetails/index.tsx":"44","/home/gustavo/q2/gestao3/capstone-q2-educ-financeira-g4/src/Components/CardWishDetails/styles.ts":"45","/home/gustavo/q2/gestao3/capstone-q2-educ-financeira-g4/src/Components/Toast/style.tsx":"46","/home/gustavo/q2/gestao3/capstone-q2-educ-financeira-g4/src/Pages/DashboardKids/style.ts":"47","/home/gustavo/q2/gestao3/capstone-q2-educ-financeira-g4/src/Pages/ContentPage/index.tsx":"48","/home/gustavo/q2/gestao3/capstone-q2-educ-financeira-g4/src/Components/FormEditingProfile/index.tsx":"49","/home/gustavo/q2/gestao3/capstone-q2-educ-financeira-g4/src/Components/Chart/index.tsx":"50","/home/gustavo/q2/gestao3/capstone-q2-educ-financeira-g4/src/Pages/ContentPage/style.ts":"51","/home/gustavo/q2/gestao3/capstone-q2-educ-financeira-g4/src/Components/FormEditingProfile/style.js":"52","/home/gustavo/q2/gestao3/capstone-q2-educ-financeira-g4/src/Components/Chart/style.ts":"53","/home/gustavo/q2/gestao3/capstone-q2-educ-financeira-g4/src/Pages/ContentHome/style.ts":"54","/home/gustavo/q2/gestao3/capstone-q2-educ-financeira-g4/src/Pages/DashboardParents/style.ts":"55","/home/gustavo/q2/gestao3/capstone-q2-educ-financeira-g4/src/Components/CardChildren/style.ts":"56"},{"size":434,"mtime":1636672625803,"results":"57","hashOfConfig":"58"},{"size":306,"mtime":1637188909850,"results":"59","hashOfConfig":"58"},{"size":1166,"mtime":1637188909874,"results":"60","hashOfConfig":"58"},{"size":563,"mtime":1637188909878,"results":"61","hashOfConfig":"58"},{"size":1248,"mtime":1637263489663,"results":"62","hashOfConfig":"58"},{"size":9028,"mtime":1637281770475,"results":"63","hashOfConfig":"58"},{"size":130,"mtime":1636672625803,"results":"64","hashOfConfig":"58"},{"size":14597,"mtime":1637277932163,"results":"65","hashOfConfig":"58"},{"size":5161,"mtime":1637288157091,"results":"66","hashOfConfig":"58"},{"size":16521,"mtime":1637278444615,"results":"67","hashOfConfig":"58"},{"size":8946,"mtime":1637188909878,"results":"68","hashOfConfig":"58"},{"size":3337,"mtime":1637188909878,"results":"69","hashOfConfig":"58"},{"size":2235,"mtime":1637263489659,"results":"70","hashOfConfig":"58"},{"size":3383,"mtime":1637290262781,"results":"71","hashOfConfig":"58"},{"size":1786,"mtime":1637277932163,"results":"72","hashOfConfig":"58"},{"size":1436,"mtime":1636723649988,"results":"73","hashOfConfig":"58"},{"size":1423,"mtime":1637289991234,"results":"74","hashOfConfig":"58"},{"size":574,"mtime":1636658300553,"results":"75","hashOfConfig":"58"},{"size":3396,"mtime":1637289649985,"results":"76","hashOfConfig":"58"},{"size":1620,"mtime":1637263489655,"results":"77","hashOfConfig":"58"},{"size":2091,"mtime":1637263489659,"results":"78","hashOfConfig":"58"},{"size":3967,"mtime":1637277932163,"results":"79","hashOfConfig":"58"},{"size":629,"mtime":1637111381901,"results":"80","hashOfConfig":"58"},{"size":8087,"mtime":1637287520676,"results":"81","hashOfConfig":"58"},{"size":1402,"mtime":1637253435602,"results":"82","hashOfConfig":"58"},{"size":5371,"mtime":1637188909878,"results":"83","hashOfConfig":"58"},{"size":1489,"mtime":1637188909878,"results":"84","hashOfConfig":"58"},{"size":5172,"mtime":1637289649985,"results":"85","hashOfConfig":"58"},{"size":5992,"mtime":1637288157091,"results":"86","hashOfConfig":"58"},{"size":1154,"mtime":1637277932163,"results":"87","hashOfConfig":"58"},{"size":1050,"mtime":1637188909874,"results":"88","hashOfConfig":"58"},{"size":404,"mtime":1637188909854,"results":"89","hashOfConfig":"58"},{"size":1171,"mtime":1637263489655,"results":"90","hashOfConfig":"58"},{"size":1182,"mtime":1637263489655,"results":"91","hashOfConfig":"58"},{"size":3623,"mtime":1637288157095,"results":"92","hashOfConfig":"58"},{"size":1253,"mtime":1637188909854,"results":"93","hashOfConfig":"58"},{"size":2625,"mtime":1637253435598,"results":"94","hashOfConfig":"58"},{"size":2261,"mtime":1637253435598,"results":"95","hashOfConfig":"58"},{"size":1676,"mtime":1637003473730,"results":"96","hashOfConfig":"58"},{"size":1594,"mtime":1637003473734,"results":"97","hashOfConfig":"58"},{"size":1406,"mtime":1637003473738,"results":"98","hashOfConfig":"58"},{"size":754,"mtime":1637263489655,"results":"99","hashOfConfig":"58"},{"size":324,"mtime":1637263489655,"results":"100","hashOfConfig":"58"},{"size":1969,"mtime":1637284344737,"results":"101","hashOfConfig":"58"},{"size":2385,"mtime":1637263489655,"results":"102","hashOfConfig":"58"},{"size":1395,"mtime":1637188909874,"results":"103","hashOfConfig":"58"},{"size":4191,"mtime":1637281770475,"results":"104","hashOfConfig":"58"},{"size":7552,"mtime":1637240802974,"results":"105","hashOfConfig":"58"},{"size":2354,"mtime":1637240802974,"results":"106","hashOfConfig":"58"},{"size":3365,"mtime":1637281193389,"results":"107","hashOfConfig":"58"},{"size":3237,"mtime":1637288157095,"results":"108","hashOfConfig":"58"},{"size":1592,"mtime":1637188909854,"results":"109","hashOfConfig":"58"},{"size":424,"mtime":1637188909850,"results":"110","hashOfConfig":"58"},{"size":3976,"mtime":1637277932163,"results":"111","hashOfConfig":"58"},{"size":641,"mtime":1637287520676,"results":"112","hashOfConfig":"58"},{"size":5234,"mtime":1637287520676,"results":"113","hashOfConfig":"58"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},"vfqqot",{"filePath":"117","messages":"118","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"127","usedDeprecatedRules":"116"},{"filePath":"128","messages":"129","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"130","messages":"131","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"132","messages":"133","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"134","usedDeprecatedRules":"116"},{"filePath":"135","messages":"136","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"137","usedDeprecatedRules":"116"},{"filePath":"138","messages":"139","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"140","messages":"141","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"142","usedDeprecatedRules":"116"},{"filePath":"143","messages":"144","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"145","messages":"146","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"147","messages":"148","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"149","usedDeprecatedRules":"116"},{"filePath":"150","messages":"151","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"152","messages":"153","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"154","messages":"155","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"156","messages":"157","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"158","messages":"159","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"160","messages":"161","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"162","messages":"163","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"164","usedDeprecatedRules":"116"},{"filePath":"165","messages":"166","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"167","messages":"168","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"169","usedDeprecatedRules":"116"},{"filePath":"170","messages":"171","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"172","messages":"173","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"174","messages":"175","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"176","messages":"177","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"178","messages":"179","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"180","messages":"181","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"182","usedDeprecatedRules":"116"},{"filePath":"183","messages":"184","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"185","messages":"186","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"187"},{"filePath":"188","messages":"189","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"190","usedDeprecatedRules":"116"},{"filePath":"191","messages":"192","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"193","usedDeprecatedRules":"116"},{"filePath":"194","messages":"195","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"196","usedDeprecatedRules":"116"},{"filePath":"197","messages":"198","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"199","usedDeprecatedRules":"116"},{"filePath":"200","messages":"201","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"202","messages":"203","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"204","messages":"205","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"187"},{"filePath":"206","messages":"207","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"187"},{"filePath":"208","messages":"209","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"210","messages":"211","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"212","messages":"213","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"214","messages":"215","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"216","usedDeprecatedRules":"116"},{"filePath":"217","messages":"218","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"219","messages":"220","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"221","messages":"222","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"223","messages":"224","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"225","messages":"226","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"227","usedDeprecatedRules":"116"},{"filePath":"228","messages":"229","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"230","usedDeprecatedRules":"116"},{"filePath":"231","messages":"232","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"233","messages":"234","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"187"},{"filePath":"235","messages":"236","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"237","messages":"238","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"239","messages":"240","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"241","messages":"242","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},"/home/gustavo/q2/gestao3/capstone-q2-educ-financeira-g4/src/index.tsx",[],["243","244"],"/home/gustavo/q2/gestao3/capstone-q2-educ-financeira-g4/src/App.tsx",[],"/home/gustavo/q2/gestao3/capstone-q2-educ-financeira-g4/src/GlobalStyle/index.tsx",[],"/home/gustavo/q2/gestao3/capstone-q2-educ-financeira-g4/src/Providers/index.tsx",[],"/home/gustavo/q2/gestao3/capstone-q2-educ-financeira-g4/src/Routes/index.tsx",[],"/home/gustavo/q2/gestao3/capstone-q2-educ-financeira-g4/src/Providers/Users/index.tsx",["245"],"import { createContext, ReactNode, useContext, useState } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport api from \"../../Services/api\";\nimport \"react-toastify/dist/ReactToastify.css\";\nimport { showToast } from \"../../Components/Toast/style\";\n\ninterface UserProps {\n  children: ReactNode;\n}\n\ninterface UserData {\n  email: string;\n  password: string;\n}\n\ninterface UserDataItens {\n  name: string;\n  email: string;\n  password: string;\n  wallet: number;\n  wishlist: Wish[];\n  balance: Balance[];\n  children: Children[];\n  parentId: number;\n  id?: number;\n  type: string;\n}\n\ninterface Wish {\n  name: string;\n  value: number;\n  kitty: number;\n}\n\nexport interface Balance {\n  date: string;\n  move: number;\n}\n\ninterface Children {\n  childrenId: number;\n}\ninterface activity {\n  childAchivied: boolean,\n  parentAchivied: boolean,\n  frequency: string;\n  name: string;\n  reward: number;\n  userId: number;\n  id: number;\n}\n\ninterface EditProfileData {\n  name?: string;\n  password?: string;\n}\ninterface UserProviderData {\n  Login: (userData: UserData) => void;\n  Logout: () => void;\n  Register: (userData: UserDataItens) => void;\n  UserToken: string;\n  activities: activity[];\n  GetActivities: (userId: number) => void;\n  userData: UserDataItens;\n  AddWishList: (data: UserDataItens, wish: Wish) => void;\n  SpendBalance: (data: UserDataItens, number: number) => void;\n  ReceivedBalance: (data: UserDataItens, number: number) => void;\n  AddtoKitty: (item: Wish, value: number) => void;\n  getUserData: () => void;\n  isValidToken: boolean;\n  isTokenValid: () => void;\n  typeUser: string;\n  userId: string;\n  EditProfile: (data: EditProfileData) => void;\n  SelectedChild: (id: number) => void;\n}\nexport const UserContext = createContext<UserProviderData>(\n  {} as UserProviderData\n);\n\nexport const UserProvider = ({ children }: UserProps) => {\n  // const {  } = useContext(ModalContext)\n  const [userData, setUserData] = useState<UserDataItens>({} as UserDataItens);\n  const history = useHistory();\n  const [UserToken, setUserToken] = useState(\n    () => localStorage.getItem(\"token\") || \"\"\n  );\n  const [userId, setUserId] = useState(\n    () => localStorage.getItem(\"userId\") || \"\"\n  );\n  const [activities, setActivities] = useState([] as activity[]);\n  const [isValidToken, setIsValidToken] = useState<boolean>(false);\n\n  const [typeUser, setTypeUser] = useState(\n    () => localStorage.getItem(\"typeUser\") || \"\"\n  );\n\n  const Login = (userData: UserData) => {\n    api\n      .post(\"login\", userData)\n      .then((response) => {\n        localStorage.setItem(\"userId\", response.data.user.id);\n        localStorage.setItem(\"amountToPay\", \"0\")\n        setUserId(response.data.user.id);\n        localStorage.setItem(\"typeUser\", response.data.user.type);\n        setTypeUser(response.data.user.type);\n        localStorage.setItem(\"token\", response.data.accessToken);\n        showToast({ type: \"success\", message: \"Sucesso ao logar\" });\n        setUserToken(response.data.accessToken);\n        setUserData(response.data.user);\n        response.data.user.type === \"parent\"\n          ? history.push(\"/dashboardparents\")\n          : history.push(\"/dashboardkids\");\n      })\n      .catch((err) => {\n        console.log(err);\n        showToast({ type: \"error\", message: \"Erro, ao tentar logar!\" });\n      });\n  };\n\n  const Logout = () => {\n    localStorage.clear();\n    showToast({ type: \"success\", message: \"Você esta deslogado!\" });\n    setUserToken(\"\");\n    history.push(\"/\");\n  };\n\n  const Register = (ParentUserData: UserDataItens) => {\n    api\n      .post(\"register\", ParentUserData)\n      .then(() => {\n        history.push(\"/login\");\n        showToast({\n          type: \"success\",\n          message:\n            ParentUserData.type === \"children\"\n              ? \"Agora seu dependente pode começar a aprender sobre educação financeira\"!\n              : \"Parabéns, você criou uma conta!\",\n        });\n      })\n      .catch((err) => {\n        console.log(err);\n        showToast({ type: \"error\", message: \"Erro, ao criar dependente!\" });\n      });\n  };\n\n  const AddWishList = (data: UserDataItens, wish: Wish) => {\n    data.wishlist.push(wish);\n    console.log(data);\n    api\n      .patch(`users/${data.id}`, data, {\n        headers: {\n          Authorization: `Bearer ${UserToken}`,\n        },\n      })\n      .then((response) => {\n        console.log(response.data);\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n  };\n\n  const ReceivedBalance = (data: UserDataItens, value: number) => {\n    const send = { date: new Date().toLocaleDateString('pt-br').slice(0,20), move: value };\n    data.balance.push(send);\n    data.wallet += value;\n    api\n      .patch(`users/${data.id}`, data, {\n        headers: {\n          Authorization: `Bearer ${UserToken}`,\n        },\n      })\n      .then((response) => {\n        getUserData();\n        console.log(response.data);\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n  };\n\n  const SpendBalance = (data: UserDataItens, value: number) => {\n    const send = { date: new Date().toLocaleDateString('pt-br').slice(0,20), move: value };\n    data.balance.push(send);\n    data.wallet += value;\n    api\n      .patch(`users/${data.id}`, data, {\n        headers: {\n          Authorization: `Bearer ${UserToken}`,\n        },\n      })\n      .then((response) => {\n        getUserData();\n        console.log(response.data);\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n  };\n\n  const getUserData = () => {\n    api\n      .get(`users/${localStorage.getItem(\"userId\")}`, {\n        headers: {\n          Authorization: `Bearer ${UserToken}`,\n        },\n      })\n      .then((reponse) => {\n        setUserData(reponse.data);\n\n        console.log(\"userdata\", userData);\n        console.log(\"response\", reponse);\n      })\n      .catch((e) => {\n        console.log(e);\n        localStorage.clear();\n      });\n  };\n\n  const AddtoKitty = (wish: Wish, value: number) => {\n    const el = userData.wishlist.map((item) => {\n      if (item.name === wish.name) {\n        return {\n          name: wish.name,\n          value: wish.value,\n          kitty: wish.kitty + value,\n        };\n      }\n      return item;\n    });\n    const send = userData.wishlist.filter(\n      (element) => element.name === wish.name\n    );\n    console.log(\"send\", send);\n    const data = { wishlist: el };\n    const id = localStorage.getItem(\"userId\");\n    SpendBalance(userData, -value);\n    console.log(data);\n    api\n      .patch(`users/${id}`, data, {\n        headers: {\n          Authorization: `Bearer ${UserToken}`,\n        },\n      })\n      .then((response) => {\n        console.log(\"response\", response);\n        getUserData();\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n  };\n\n  const GetActivities = (userId: number) => {\n    api\n      .get(`activities/?userId=${userId}`, {\n        headers: {\n          Authorization: `Bearer ${localStorage.getItem(\"token\")}`,\n        },\n      })\n      .then((response) => {\n        setActivities(response.data);\n      });\n  };\n\n  const isTokenValid = () => {\n    api\n      .get(`users/${localStorage.getItem(\"userId\")}`, {\n        headers: {\n          Authorization: `Bearer ${localStorage.getItem(\"token\")}`,\n        },\n      })\n      .then((resp) => {\n      })\n      .catch((e) => {\n        console.log(\"token expirado\");\n        Logout();\n      });\n  };\n  const EditProfile = (data: EditProfileData) => {\n    api\n      .patch(`/users/${userData.id}`, data, {\n        headers: {\n          Authorization: `Bearer ${localStorage.getItem(\"token\")}`,\n        },\n      })\n      .then((response) => {\n        setUserData(response.data);\n        showToast({ type: \"success\", message: \"Perfil editado\" });\n      });\n  };\n\n  const SelectedChild = (id: number) => {\n    api\n      .get(`/users/${id}`, {\n        headers: {\n          Authorization: `Bearer ${localStorage.getItem(\"token\")}`,\n        },\n      })\n      .then((response) => {\n        const data = {\n          name: response.data.name,\n          email: response.data.email,\n          password: response.data.password,\n          children: response.data.children,\n          parentId: response.data.parentId,\n          id: response.data.id,\n          balance: [...response.data.balance],\n          wishlist: [...response.data.wishlist],\n          wallet: response.data.wallet,\n          type: \"parent\",\n        };\n        console.log(data);\n        setUserData(data);\n        history.push(\"/balance\");\n      });\n  };\n\n  return (\n    <UserContext.Provider\n      value={{\n        UserToken,\n        Login,\n        Logout,\n        Register,\n        userData,\n        AddWishList,\n        SpendBalance,\n        ReceivedBalance,\n        getUserData,\n        AddtoKitty,\n        activities,\n        GetActivities,\n        userId,\n        isValidToken,\n        isTokenValid,\n        typeUser,\n        EditProfile,\n        SelectedChild,\n      }}\n    >\n      {children}\n    </UserContext.Provider>\n  );\n};\n\nexport const useUser = () => useContext(UserContext);\n","/home/gustavo/q2/gestao3/capstone-q2-educ-financeira-g4/src/Services/api.ts",[],"/home/gustavo/q2/gestao3/capstone-q2-educ-financeira-g4/src/Pages/ContentHome/index.tsx",[],"/home/gustavo/q2/gestao3/capstone-q2-educ-financeira-g4/src/Pages/Balance/index.tsx",["246","247","248","249","250"],"import React, { useContext } from \"react\";\nimport { BsFillPencilFill } from \"react-icons/bs\";\nimport {\n  Container,\n  ModalBalance,\n  Button,\n  BankStatement,\n  Input,\n  Chart,\n  LeftSide,\n  RightSide,\n  WishList,\n  WishListHeader,\n  WishListContent,\n} from \"./styles\";\nimport { useState, useEffect } from \"react\";\nimport { CardWish } from \"../../Components/CardWish\";\nimport { CardWishDetails } from \"../../Components/CardWishDetails\";\nimport { useModal } from \"../../Providers/Modal\";\nimport { useUser } from \"../../Providers/Users\";\nimport Demo from \"../../Components/Chart\";\nimport { TextField } from \"@material-ui/core\";\ninterface BalanceProp {\n  date?: string;\n  move?: number;\n}\n\ninterface Wish {\n  name: string;\n  value: number;\n  kitty: number;\n}\n\nexport const Balance = () => {\n  const [isOpenBalance, setIsOpenBalance] = useState(false);\n  const [isOpenWish, setIsOpenWish] = useState(false);\n\n  const {\n    userData,\n    getUserData,\n    ReceivedBalance,\n    SpendBalance,\n    AddWishList,\n    isTokenValid,\n  } = useUser();\n\n  const [isParent] = useState<boolean>(\n    userData.type === \"parent\" ? true : false\n  );\n  const [received, setReceived] = useState(0);\n  const [spend, setSpend] = useState(0);\n  const [wishName, setWishName] = useState(\"\");\n  const [wishPrice, setWishPrice] = useState(0);\n  const { isWish } = useModal();\n\n  const HandleClickBalance = () => {\n    spend !== 0 && SpendBalance(userData, spend);\n    received !== 0 && ReceivedBalance(userData, received);\n    setSpend(0);\n    setReceived(0);\n  };\n\n  const HandleClickWish = () => {\n    const wish = { name: wishName, value: wishPrice, kitty: 0 };\n    console.log(wish);\n    AddWishList(userData, wish);\n  };\n\n\n\n  useEffect(() => {\n    isTokenValid();\n  }, []);\n\n  console.log(userData);\n  return (\n    <Container>\n      <LeftSide>\n        <h2>Patrimônio Total Acumulado</h2>\n        <Chart>\n          <Demo />\n        </Chart>\n        <Button\n          className=\"moves\"\n          onClick={() => setIsOpenBalance(!isOpenBalance)}\n        >\n          Movimentações\n        </Button>\n          <ModalBalance className={isOpenBalance ? 'openBalance': 'closeBalance'}>\n            <h2>Balanço Financeiras</h2>\n            <BankStatement>\n              {userData.balance ? (\n                userData.balance.map((item: BalanceProp, index: number) => (\n                  <li key={index}>\n                    <span>{item.date}</span>\n                    <strong className={Number(item.move) < 0? 'red' : 'green'}>\n                      {\" R$ \"}\n                      {item.move && item.move.toFixed(2).replace(\".\", \",\")}\n                    </strong>\n                  </li>\n                ))\n              ) : (\n                <p>\"Sem movimentações!\"</p>\n              )}\n            </BankStatement>\n            <h2>{`Saldo:   ${userData.wallet\n              .toFixed(2)\n              .replace(\".\", \",\")}`}</h2>\n            {!isParent && <label>Recebido</label>}\n            {!isParent && (\n              \n              <Input\n                placeholder=\"Recebido\"\n                onChange={(e) => {\n                  setReceived(Number(e.target.value));\n                  console.log(e.target.value);\n                }}\n              />\n            )}\n            {!isParent && <label className=\"secondLabel\">Pago</label>}\n            {!isParent && (\n              <Input\n                placeholder=\"Pago\"\n                onChange={(e) => setSpend(Number(e.target.value) * -1)}\n              />\n            )}\n            {!isParent && (\n              <Button onClick={() => HandleClickBalance()}>Enviar</Button>\n            )}\n            <Button onClick={() => setIsOpenBalance(!isOpenBalance)}>\n              Sair\n            </Button>\n          </ModalBalance>\n      </LeftSide>\n      <RightSide>\n        <WishList>\n          <WishListHeader>\n            {isOpenWish ? (\n              <h3>Criar novo desejo</h3>\n            ) : (\n              <h3>Lista de desejos</h3>\n            )}\n          </WishListHeader>\n          {isOpenWish ? (\n            <WishListContent>\n              <section>\n                <h3>Nome</h3>\n                <Input\n                  placeholder=\"nome\"\n                  onChange={(e) => setWishName(e.target.value)}\n                />\n              </section>\n              <section>\n                <h2>Valor</h2>\n                <Input\n                  placeholder=\"valor\"\n                  onChange={(e) => setWishPrice(Number(e.target.value))}\n                />\n              </section>\n              <Button onClick={() => HandleClickWish()}>Enviar</Button>\n            </WishListContent>\n          ) : (\n            <WishListContent>\n              {userData.wishlist?.map((item: Wish, index: number) => (\n                <CardWish id=\"wishlist\" key={index} item={item} />\n              ))}\n            </WishListContent>\n          )}\n          {isWish && <CardWishDetails />}\n        </WishList>\n        {!isParent && (\n          <Button onClick={() => setIsOpenWish(!isOpenWish)}>\n            {isOpenWish ? \"Fechar criar desejo\" : \"Criar desejo\"}\n          </Button>\n        )}\n      </RightSide>\n    </Container>\n  );\n};\n","/home/gustavo/q2/gestao3/capstone-q2-educ-financeira-g4/src/Pages/DashboardKids/index.tsx",["251","252","253"],"import { useEffect, useState } from \"react\";\nimport { useUser } from \"../../Providers/Users\";\nimport {\n  ContainerDesktop,\n  CardList,\n  ActivitiesList,\n  ContainerMobile,\n  MobileContent,\n  ContainerPage,\n  NotAchivied,\n  Achivied,\n  AchiviedMobile,\n  NotAchiviedMobile\n} from \"./style\";\nimport { AiOutlineCheck } from \"react-icons/ai\";\nimport { FaTrash, FaAngellist } from \"react-icons/fa\";\nimport { RiEmotionSadLine } from \"react-icons/ri\";\nimport api from \"../../Services/api\";\nimport ProfileBarChildren from \"../../Components/ProfileBarChildren\";\n\nconst DashboardKids = () => {\n  const { activities, GetActivities, isTokenValid } = useUser();\n  const userId = localStorage.getItem(\"userId\");\n  const [carrouselNumber, setCarrouselNumber] = useState(0);\n  useEffect(() => {\n    GetActivities(Number(userId));\n  }, []);\n\n  useEffect(() => {\n    isTokenValid()\n   }, [])\n\n  const AchiviedFunction = (id: number) => {\n    const body = {\n      childAchivied: true,\n    };\n    api\n      .patch(`activities/${id}`, body, {\n        headers: {\n          Authorization: `Bearer ${localStorage.getItem(\"token\")}`,\n        },\n      })\n      .then((response) => {\n        console.log('testegug',response)\n        GetActivities(Number(userId));\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n  };\n\n  const UnachiviedFunction = (id: number) => {\n    const body = {\n      childAchivied: false,\n    };\n    api\n      .patch(`activities/${id}`, body, {\n        headers: {\n          Authorization: `Bearer ${localStorage.getItem(\"token\")}`,\n        },\n      })\n      .then(() => {\n        GetActivities(Number(userId));\n      });\n  };\n  const getNextCard = () => {\n    if (carrouselNumber !== 2) {\n      setCarrouselNumber(carrouselNumber + 1);\n    } else {\n      setCarrouselNumber(0);\n    }\n  };\n\n  const getLastCard = () => {\n    if (carrouselNumber !== 0) {\n      setCarrouselNumber(carrouselNumber - 1);\n    } else {\n      setCarrouselNumber(2);\n    }\n  };\n\n  return (\n    <>       \n      <ContainerPage> \n        <ProfileBarChildren/>\n      <ContainerDesktop>  \n     \n        <h2>Atividades</h2>\n        <CardList>\n          <li className=\"card\">\n            <h2>Diárias</h2>\n            <ActivitiesList>\n              <h3>Tarefas a concluir:</h3>\n              <NotAchivied>\n              {activities.filter(\n                (item) => item.frequency === \"Diaria\" && item.childAchivied === false\n              ).length > 0 ? (\n                activities\n                  .filter(\n                    (item) =>\n                      item.frequency === \"Diaria\" && item.childAchivied === false\n                  )\n                  .map((item, index) => (\n                    <li key={index}>\n                      <p>{item.name} </p>\n                      <b>R$ {item.reward.toFixed(2)}</b>\n                      <button onClick={()=> AchiviedFunction(item.id)}>\n                        <AiOutlineCheck />\n                      </button>\n                    </li>\n                  ))\n              ) : (\n                <div>\n                  <FaAngellist />\n                  <p>Tudo concluído !!</p>\n                </div>\n              )}\n              </NotAchivied>\n              <h3>Tarefas Concluídas: </h3>\n              <Achivied>\n              {activities.filter(\n                (item) => item.frequency === \"Diaria\" && item.childAchivied === true\n              ).length > 0 ? (\n                activities\n                  .filter(\n                    (item) =>\n                      item.frequency === \"Diaria\" && item.childAchivied === true\n                  )\n                  .map((item, index) => (\n                    <li key={index}>\n                      <p>{item.name} </p>\n                      <b>R$ {item.reward.toFixed(2)}</b>\n                      <button onClick={() => UnachiviedFunction(item.id)}>\n                        <FaTrash className=\"trashIcon\" />\n                      </button>\n                    </li>\n                  ))\n              ) : (\n                <div>\n                  <RiEmotionSadLine className=\"sadIcon\" />\n                  <p className=\"nothingDone\">Nada concluído</p>\n                </div>\n              )}\n              </Achivied>\n            </ActivitiesList>\n          </li>\n\n          <li className=\"card\">\n            <h2>Semanais</h2>\n            <ActivitiesList>\n              <h3>Tarefas a concluir:</h3>\n                <NotAchivied>\n              {activities.filter(\n                (item) =>\n                  item.frequency === \"Semanal\" && item.childAchivied === false\n              ).length > 0 ? (\n                activities\n                  .filter(\n                    (item) =>\n                      item.frequency === \"Semanal\" && item.childAchivied === false\n                  )\n                  .map((item, index) => (\n                    <li key={index}>\n                      <p>{item.name}</p>\n                      <b>R$ {item.reward.toFixed(2)}</b>\n                      <button onClick={() => AchiviedFunction(item.id)}>\n                        <AiOutlineCheck />\n                      </button>\n                    </li>\n                  ))\n              ) : (\n                <div>\n                  <FaAngellist />\n                  <p>Tudo concluído !!</p>\n                </div>\n              )}\n              </NotAchivied>\n              <Achivied>\n              <h3>Tarefas concluídas</h3>\n              {activities.filter(\n                (item) => item.frequency === \"Semanal\" && item.childAchivied === true\n              ).length > 0 ? (\n                activities\n                  .filter(\n                    (item) =>\n                      item.frequency === \"Semanal\" && item.childAchivied === false\n                  )\n                  .map((item, index) => (\n                    <li key={index}>\n                      <p>{item.name} </p>\n                      <b>R$ {item.reward.toFixed(2)}</b>\n                      <button onClick={() => UnachiviedFunction(item.id)}>\n                        <FaTrash className=\"trashIcon\" />\n                      </button>\n                    </li>\n                  ))\n              ) : (\n                <div>\n                  <RiEmotionSadLine className=\"sadIcon\" />\n                  <p className=\"nothingDone\">Nada concluído</p>\n                </div>\n              )}\n              </Achivied>\n            </ActivitiesList>\n          </li>\n\n          <li className=\"card\">\n            <h2>Mensais</h2>\n            <ActivitiesList>\n              <h3>Tarefas a concluir</h3>\n              <NotAchivied>\n\n              {activities.filter(\n                (item) => item.frequency === \"Mensal\" && item.childAchivied === false\n              ).length > 0 ? (\n                activities\n                  .filter(\n                    (item) =>\n                      item.frequency === \"Mensal\" && item.childAchivied === false\n                  )\n                  .map((item, index) => (\n                    <li key={index}>\n                      <p>{item.name} </p>\n                      <b>R$ {item.reward.toFixed(2)}</b>\n                      <button onClick={() => AchiviedFunction(item.id)}>\n                        <AiOutlineCheck />\n                      </button>\n                    </li>\n                  ))\n              ) : (\n                <div>\n                  <FaAngellist />\n                  <p>Tudo concluído !!</p>\n                </div>\n              )}\n                </NotAchivied>\n              <h3>Tarefas concluídas</h3>\n                <Achivied>\n              {activities.filter(\n                (item) => item.frequency === \"Mensal\" && item.childAchivied === true\n              ).length > 0 ? (\n                activities\n                  .filter(\n                    (item) =>\n                      item.frequency === \"Mensal\" && item.childAchivied === true\n                  )\n                  .map((item, index) => (\n                    <li key={index}>\n                      <p>{item.name} </p>\n                      <b>R$ {item.reward.toFixed(2)}</b>\n                      <button onClick={() => UnachiviedFunction(item.id)}>\n                        <FaTrash className=\"trashIcon\" />\n                      </button>\n                    </li>\n                  ))\n              ) : (\n                <div>\n                  <RiEmotionSadLine className=\"sadIcon\" />\n                  <p className=\"nothingDone\">Nada concluído</p>\n                </div>\n              )}\n              </Achivied>\n            </ActivitiesList>\n          </li>\n        </CardList>\n      </ContainerDesktop>\n      </ContainerPage>\n      \n\n      <ContainerMobile>\n        <h2>Atividades</h2>\n        <MobileContent>\n          <button\n            onClick={() => setCarrouselNumber(1)}\n            className=\"passLeft navegateButton\"\n          >\n            &lt;\n          </button>\n\n          <CardList>\n            <li className=\"cardMobile\">\n              {carrouselNumber === 0 && (\n                <ActivitiesList>\n                  <h2>Diária</h2>\n\n                  <h3>Tarefas a concluir:</h3>\n                  <AchiviedMobile>\n                  {activities.filter(\n                    (item) =>\n                      item.frequency === \"Diaria\" && item.childAchivied === false\n                  ).length > 0 ? (\n                    activities\n                      .filter(\n                        (item) =>\n                          item.frequency === \"Diaria\" && item.childAchivied === false\n                      )\n                      .map((item, index) => (\n                        <li key={index}>\n                          <p>{item.name} </p>\n                          <b>R$ {item.reward.toFixed(2)}</b>\n                          <button onClick={() => AchiviedFunction(item.id)}>\n                            <AiOutlineCheck />\n                          </button>\n                        </li>\n                      ))\n                  ) : (\n                    <div>\n                      <FaAngellist />\n                      <p>Tudo concluído !!</p>\n                    </div>\n                  )}\n                  </AchiviedMobile>\n                  <h3>Tarefas Concluídas: </h3>\n                  <NotAchiviedMobile>\n                  {activities.filter(\n                    (item) =>\n                      item.frequency === \"Diaria\" && item.childAchivied === true\n                  ).length > 0 ? (\n                    activities\n                      .filter(\n                        (item) =>\n                          item.frequency === \"Diaria\" && item.childAchivied === true\n                      )\n                      .map((item, index) => (\n                        <li key={index}>\n                          <p>{item.name} </p>\n                          <b>R$ {item.reward.toFixed(2)}</b>\n                          <button onClick={() => UnachiviedFunction(item.id)}>\n                            <FaTrash className=\"trashIcon\" />\n                          </button>\n                        </li>\n                      ))\n                  ) : (\n                    <div>\n                      <RiEmotionSadLine className=\"sadIcon\" />\n                      <p className=\"nothingDone\">Nada concluído</p>\n                    </div>\n                  )}\n                  </NotAchiviedMobile>\n                </ActivitiesList>\n              )}\n\n              {carrouselNumber === 1 && (\n                <ActivitiesList>\n                  <h2>Semanal</h2>\n\n                  <h3>Tarefas a concluir:</h3>\n                  <AchiviedMobile>\n                  {activities.filter(\n                    (item) =>\n                      item.frequency === \"Semanal\" && item.childAchivied === false\n                  ).length > 0 ? (\n                    activities\n                      .filter(\n                        (item) =>\n                          item.frequency === \"Semanal\" &&\n                          item.childAchivied === false\n                      )\n                      .map((item, index) => (\n                        <li key={index}>\n                          <p>{item.name} </p>\n                          <b>R$ {item.reward.toFixed(2)}</b>\n                          <button onClick={() => AchiviedFunction(item.id)}>\n                            <AiOutlineCheck />\n                          </button>\n                        </li>\n                      ))\n                  ) : (\n                    <div>\n                      <FaAngellist />\n                      <p>Tudo concluído !!</p>\n                    </div>\n                  )}\n                  </AchiviedMobile>\n                  <h3>Tarefas Concluídas: </h3>\n                  <NotAchiviedMobile>\n                  {activities.filter(\n                    (item) =>\n                      item.frequency === \"Semanal\" && item.childAchivied === true\n                  ).length > 0 ? (\n                    activities\n                      .filter(\n                        (item) =>\n                          item.frequency === \"Semanal\" && item.childAchivied === true\n                      )\n                      .map((item, index) => (\n                        <li key={index}>\n                          <p>{item.name} </p>\n                          <b>R$ {item.reward.toFixed(2)}</b>\n                          <button onClick={() => UnachiviedFunction(item.id)}>\n                            <FaTrash className=\"trashIcon\" />\n                          </button>\n                        </li>\n                      ))\n                  ) : (\n                    <div>\n                      <RiEmotionSadLine className=\"sadIcon\" />\n                      <p className=\"nothingDone\">Nada concluído</p>\n                    </div>\n                  )}\n                  </NotAchiviedMobile>\n                </ActivitiesList>\n              )}\n\n              {carrouselNumber === 2 && (\n                <ActivitiesList>\n                  <h2>Mensal</h2>\n\n                  <h3>Tarefas a concluir:</h3>\n                  <AchiviedMobile>\n                  {activities.filter(\n                    (item) =>\n                      item.frequency === \"Mensal\" && item.childAchivied === false\n                  ).length > 0 ? (\n                    activities\n                      .filter(\n                        (item) =>\n                          item.frequency === \"Mensal\" && item.childAchivied === false\n                      )\n                      .map((item, index) => (\n                        <li key={index}>\n                          <p>{item.name} </p>\n                          <b>R$ {item.reward.toFixed(2)}</b>\n                          <button onClick={() => AchiviedFunction(item.id)}>\n                            <AiOutlineCheck />\n                          </button>\n                        </li>\n                      ))\n                  ) : (\n                    <div>\n                      <FaAngellist />\n                      <p>Tudo concluído !!</p>\n                    </div>\n                  )}\n                  </AchiviedMobile>\n                  <h3>Tarefas Concluídas: </h3>\n                  <NotAchiviedMobile>\n                  {activities.filter(\n                    (item) =>\n                      item.frequency === \"Mensal\" && item.childAchivied === true\n                  ).length > 0 ? (\n                    activities\n                      .filter(\n                        (item) =>\n                          item.frequency === \"Mensal\" && item.childAchivied === true\n                      )\n                      .map((item, index) => (\n                        <li key={index}>\n                          <p>{item.name} </p>\n                          <b>R$ {item.reward.toFixed(2)}</b>\n                          <button onClick={() => UnachiviedFunction(item.id)}>\n                            <FaTrash className=\"trashIcon\" />\n                          </button>\n                        </li>\n                      ))\n                  ) : (\n                    <div>\n                      <RiEmotionSadLine className=\"sadIcon\" />\n                      <p className=\"nothingDone\">Nada concluído</p>\n                    </div>\n                  )}\n                  </NotAchiviedMobile>\n                </ActivitiesList>\n              )}\n            </li>\n          </CardList>\n          <button onClick={getNextCard} className=\"passRight navegateButton\">\n            &gt;\n          </button>\n        </MobileContent>\n      </ContainerMobile>\n    </>\n  );\n};\nexport default DashboardKids;\n","/home/gustavo/q2/gestao3/capstone-q2-educ-financeira-g4/src/Pages/Home/index.tsx",[],"/home/gustavo/q2/gestao3/capstone-q2-educ-financeira-g4/src/Pages/RegisterKids/index.tsx",["254","255"],"import React, { useContext, useEffect } from \"react\";\nimport {\n  Container,\n  Form,\n  FormContainer,\n  ImageContainer,\n  Button,\n} from \"./styles\";\nimport LottieMaker from \"../../Components/LottieMaker\";\nimport { useForm } from \"react-hook-form\";\nimport * as yup from \"yup\";\nimport { yupResolver } from \"@hookform/resolvers/yup\";\nimport { TextField } from \"@material-ui/core\";\nimport { UserContext, useUser } from \"../../Providers/Users\";\nimport { useHistory } from \"react-router\";\n\ninterface RegisterUserData {\n  name: string;\n  email: string;\n  password: string;\n  confirmPassword: string;\n}\n\nexport const RegisterKids = () => {\n  const history = useHistory();\n  const { userData, isTokenValid } = useContext(UserContext)\n\n  useEffect(() => {\n    isTokenValid()\n  }, [])\n\n  const schema = yup.object().shape({\n    name: yup.string().required(\"Campo obrigatório!\"),\n    email: yup.string().required(\"Campo obrigatório!\").email(\"Email inválido\"),\n    password: yup.string().min(6, \"Mínimo de 6 dígitos\"),\n    confirmPassword: yup\n      .string()\n      .oneOf([yup.ref(\"password\")], \"Senhas diferentes\"),\n  });\n\n  const { Register } = useUser();\n\n  const {\n    register,\n    handleSubmit,\n    formState: { errors },\n  } = useForm<RegisterUserData>({ resolver: yupResolver(schema) });\n\n  const onSubmitFunction = (data: RegisterUserData) => {\n    const { email, name, password } = data;\n    const ParentUserData = {\n      name,\n      email,\n      password,\n      type: \"children\",\n      wallet: 0,\n      wishlist: [],\n      balance: [],\n      children: [],\n      parentId: Number(userData.id),\n    };\n     Register(ParentUserData);\n  };\n\n  return (\n    <>\n      <Container>\n        <FormContainer>\n          <Form onSubmit={handleSubmit(onSubmitFunction)}>\n            <h1>Cadastrar dependente</h1>\n            <TextField\n              margin=\"dense\"\n              type=\"text\"\n              id=\"name\"\n              label=\"Nome\"\n              variant=\"outlined\"\n              {...register(\"name\")}\n            />\n            <span> {errors.name?.message}</span>\n            <TextField\n              margin=\"dense\"\n              type=\"text\"\n              id=\"email\"\n              label=\"Email\"\n              variant=\"outlined\"\n              {...register(\"email\")}\n            />\n            <span>{errors.email?.message}</span>\n            <TextField\n              margin=\"dense\"\n              type=\"password\"\n              id=\"password\"\n              label=\"Senha\"\n              variant=\"outlined\"\n              {...register(\"password\")}\n            />\n            <p>{errors.password?.message}</p>\n            <TextField\n              margin=\"dense\"\n              type=\"password\"\n              id=\"confirmPassword\"\n              label=\"Confirmação de senha\"\n              variant=\"outlined\"\n              {...register(\"confirmPassword\")}\n            />\n            <span>{errors.confirmPassword?.message}</span>\n            <Button type=\"submit\">Cadastrar</Button>\n          </Form>\n        </FormContainer>\n        <ImageContainer>\n          <LottieMaker\n            lottieImage={\n              \"https://assets6.lottiefiles.com/packages/lf20_0qrzy1vy.json\"\n            }\n            height={500}\n            width={500}\n            playerAreVisible={false}\n          />\n        </ImageContainer>\n      </Container>\n    </>\n  );\n};\n","/home/gustavo/q2/gestao3/capstone-q2-educ-financeira-g4/src/Pages/Login/index.tsx",[],"/home/gustavo/q2/gestao3/capstone-q2-educ-financeira-g4/src/Pages/RegisterParents/index.tsx",[],"/home/gustavo/q2/gestao3/capstone-q2-educ-financeira-g4/src/Pages/DashboardParents/index.tsx",["256","257","258"],"import React from \"react\";\nimport { useContext, useEffect } from \"react\";\nimport ListChildren from \"../../Components/ListChildren\";\nimport { ActivitiesContext } from \"../../Providers/Activities\";\nimport FormCreatingActivity from \"../../Components/FormCreatingActivity\";\nimport { Container, EditingContainer } from \"./style\";\nimport { ModalContext } from \"../../Providers/Modal\";\nimport FormEditingActivity from \"../../Components/FormEditingActivity\";\nimport ProfileBarParents from \"../../Components/ProfileBarParents\";\nimport { UserContext } from \"../../Providers/Users\";\nimport FormEditingProfile from \"../../Components/FormEditingProfile\";\n\nexport const DashboardParents = () => {\n  const { getYourChildrens, childrenArr } = useContext(ActivitiesContext);\n\n  const { isTokenValid, userData } = useContext(UserContext);\n\n  const { isEditing, isAdding, isEditingProfile } = useContext(ModalContext);\n\n  useEffect(() => {\n    if (localStorage.getItem(\"token\")) {\n      getYourChildrens();\n    }\n  }, []);\n\n  useEffect(() => {\n    isTokenValid();\n  }, []);\n\n  return (\n    <Container>\n      {isAdding && (\n        <EditingContainer>\n          <FormCreatingActivity />\n        </EditingContainer>\n      )}\n      {isEditing && (\n        <EditingContainer>\n          <FormEditingActivity />\n        </EditingContainer>\n      )}\n      {isEditingProfile && (\n        <EditingContainer>\n          <FormEditingProfile />\n        </EditingContainer>\n      )}\n      <ProfileBarParents />\n      {childrenArr.length < 1 ? (\n        <div className=\"warnning\">\n          <h1>Você ainda não tem dependentes cadastrados, </h1>\n          <p>cadastre-os e acompanhe o desenvlvimento deles.</p>\n        </div>\n      ) : (\n        <ListChildren children={childrenArr} />\n      )}\n    </Container>\n  );\n};\n","/home/gustavo/q2/gestao3/capstone-q2-educ-financeira-g4/src/Pages/RegisterKids/styles.ts",[],"/home/gustavo/q2/gestao3/capstone-q2-educ-financeira-g4/src/Pages/RegisterParents/styles.ts",[],"/home/gustavo/q2/gestao3/capstone-q2-educ-financeira-g4/src/Components/LottieMaker/index.tsx",[],"/home/gustavo/q2/gestao3/capstone-q2-educ-financeira-g4/src/Components/NavbarHome/index.tsx",[],"/home/gustavo/q2/gestao3/capstone-q2-educ-financeira-g4/src/Components/NavbarHome/menuList.tsx",[],"/home/gustavo/q2/gestao3/capstone-q2-educ-financeira-g4/src/Pages/Login/styles.ts",[],"/home/gustavo/q2/gestao3/capstone-q2-educ-financeira-g4/src/Providers/Activities/index.tsx",["259"],"import { createContext, ReactNode, useState } from \"react\";\nimport { toast } from \"react-toastify\";\nimport { showToast } from \"../../Components/Toast/style\";\nimport api from '../../Services/api'\nimport { useUser } from \"../Users\";\n\ninterface ActivitiesProviderData{\n    getYourChildrens: ()=> void,\n    userId:string,\n    childrenArr: Children[],\n    updateActivitie: (task:Activities) => void,\n    createActivie: (task:Activities) => void,\n    actualActivitieId:number\n    changingActualIdActivitie: (activitieId:number ) => void,\n    getAmountToPay: (number:number) => void\n    amountToPay: number,\n\n    deleteActivitie: (activitie:Activities) => void\n} \ninterface ActivitiesProviderProps{\n    children:ReactNode\n}\ninterface Children{\n        balance:[],\n        email:string,\n        id:number,\n        parentId:number,\n        password:string,\n        wallet:number,\n        wishlist:[],\n        name:string,\n        type: string\n}\ninterface Activities {\n    childAchivied: boolean,\n    parentAchivied: boolean,\n    frequency: string;\n    name: string;\n    reward: number;\n    userId: number;\n    id: number;\n}\ninterface ChildrenObj {\n    achivied: boolean,\n    childrenId: number,\n    frequency: string,\n    id: number,\n    name: string,\n    reward: 1000,\n    userId: 2\n}\n\n\nexport const ActivitiesContext = createContext<ActivitiesProviderData>({} as ActivitiesProviderData)\n\nexport const ActivitiesProvider = ({ children }:ActivitiesProviderProps) =>{\n    toast.configure()\n    const [ childrenArr, setChildrenArr ] = useState<Children[]>([])\n    const [ actualActivitieId, setActualActivitieId ]  = useState(0) \n    const [amountToPay, setAmountToPay] = useState(\n        Number(localStorage.getItem(\"amountToPay\")) || 0 \n    )\n    const { userId } = useUser()\n    const getYourChildrens = () =>{\n        api\n         .get(`users?parentId=${userId}`,{\n             headers:{\n                 Authorization:`Bearer ${localStorage.getItem('token')}`\n             }\n         })\n          .then((response)=> {\n            setChildrenArr([ ...response.data])\n          })\n           .catch((err)=>{\n               console.log('getyourChildrens', err)\n               localStorage.clear();\n            })\n           \n    }\n    const updateActivitie = (task:Activities) =>{\n        api\n         .patch(`activities/${task.id}`, task, {\n            headers:{\n                Authorization:`Bearer ${localStorage.getItem('token')}`\n            }\n        })\n         .then(()=> showToast({type:\"success\", message:\"Atividade concluída com sucesso\"}))\n         \n    }\n    const createActivie = (task:Activities) =>{\n        task.reward = Number(task.reward)\n        api\n         .post('activities',  task, {\n            headers:{\n                Authorization:`Bearer ${localStorage.getItem('token')}`\n            }\n        })\n         .then(()=>{\n             showToast({type:\"success\", message:\"Atividade adicionada com sucesso\"})\n         })\n    }\n\n    const getAmountToPay = (number:number) => {\n        const total = Number(localStorage.getItem('amountToPay')) + number\n        setAmountToPay(total)\n        localStorage.setItem('amountToPay', total.toString())\n    }\n\n    const deleteActivitie = (activitie:Activities) =>{\n        api\n         .delete(`activities/${activitie.id}`,{\n            headers:{\n                Authorization:`Bearer ${localStorage.getItem('token')}`\n            }\n         })\n          .then((response) => {\n            console.log(response)\n            showToast({type:\"success\", message:\"Pagamento concluído\"})\n          })\n    }\n\n    const changingActualIdActivitie = (activitieId:number) =>{\n        setActualActivitieId(activitieId)\n    }\n    \n    return(\n        <ActivitiesContext.Provider value={{getYourChildrens, userId, childrenArr,updateActivitie, createActivie, changingActualIdActivitie, actualActivitieId, getAmountToPay, amountToPay, deleteActivitie}}>\n            { children }\n        </ActivitiesContext.Provider>\n    )\n}","/home/gustavo/q2/gestao3/capstone-q2-educ-financeira-g4/src/Components/ListChildren/index.tsx",[],"/home/gustavo/q2/gestao3/capstone-q2-educ-financeira-g4/src/Components/CardChildren/index.tsx",["260","261"],"import { useContext, useEffect, useState } from \"react\";\nimport { ActivitiesContext } from \"../../Providers/Activities\";\nimport {\n  Achivied,\n  NotAchivied,\n  Front,\n  Back,\n  ButtonsContainer,\n  MobileCard,\n  ChildrenData,\n  ChildrenActivities,\n} from \"./style\";\nimport api from \"../../Services/api\";\nimport ReactCardFlip from \"react-card-flip\";\nimport { IoIosCreate, IoIosArrowForward, IoIosArrowDown } from \"react-icons/io\";\nimport { IoAddSharp } from \"react-icons/io5\";\nimport { ChildrenContext } from \"../../Providers/Children\";\nimport { ModalContext } from \"../../Providers/Modal\";\nimport { useUser } from \"../../Providers/Users\";\n\ninterface Children {\n  balance: [];\n  email: string;\n  id: number;\n  parentId: number;\n  wallet: number;\n  wishlist: [];\n  name: string;\n  type: string;\n}\n\ninterface CardChildrenProps {\n  children: Children;\n}\n\ninterface Activities {\n  childAchivied: boolean;\n  parentAchivied: boolean;\n  frequency: string;\n  name: string;\n  reward: number;\n  userId: number;\n  id: number;\n}\n\nconst CardChildren = ({ children }: CardChildrenProps) => {\n  const [toggle, setToggle] = useState(false);\n  const [childrenActivies, setChildrenActivities] = useState<Activities[]>([]);\n  const [isFlipped, setIsFlipped] = useState(false);\n  const {\n    updateActivitie,\n    getYourChildrens,\n    createActivie,\n    deleteActivitie,\n    getAmountToPay,\n  } = useContext(ActivitiesContext);\n  const { handleAdding, handleEditing } = useContext(ModalContext);\n  const { updateWallet } = useContext(ChildrenContext);\n  const { SelectedChild } = useUser();\n\n  const getYourActivities = (userId: number) => {\n    api\n      .get(`activities/?userId=${userId}`, {\n        headers: {\n          Authorization: `Bearer ${localStorage.getItem(\"token\")}`,\n        },\n      })\n      .then((response) => {\n        setChildrenActivities(response.data);\n      })\n      .catch((err) => console.log(\"getyourActivies\", err));\n  };\n  const FinishingTask = (e: any, task: Activities) => {\n    task.parentAchivied = true;\n    if (task.parentAchivied && task.childAchivied) {\n      deleteActivitie(task);\n      updateWallet(children, task.reward);\n      getAmountToPay(task.reward);\n      getYourActivities(children.id);\n      e.target.checked = false;\n    }\n  };\n\n  useEffect(() => {\n    getYourActivities(children.id);\n  }, [createActivie]);\n\n  const updateCard = () => {\n    getYourChildrens();\n    setIsFlipped(!isFlipped);\n  };\n  return (\n    <>\n      <ReactCardFlip isFlipped={isFlipped} flipDirection=\"horizontal\">\n        <Front>\n          <img\n            src=\"https://d3ugyf2ht6aenh.cloudfront.net/stores/001/829/347/themes/amazonas/img-1347263166-1629736427-e77800fdb2094c2bcc4fb6f44d82ce1d1629736428.jpg?1211721950\"\n            alt=\"img\"\n            onClick={() => SelectedChild(children.id)}\n          />\n          <p>{children.name}</p>\n          <p>Saldo: R$ {children.wallet}</p>\n          <button\n            className=\"create-activity\"\n            onClick={() => setIsFlipped(!isFlipped)}\n          >\n            Ver mais\n          </button>\n        </Front>\n        <Back>\n          <Achivied>\n            <h2>\n              Tarefas Concluídas:{\" \"}\n              {\n                childrenActivies.filter((item) => item.childAchivied === true)\n                  .length\n              }\n            </h2>\n            {childrenActivies\n              .filter((item) => item.childAchivied === true)\n              .map((achivied, key) => (\n                <div key={key}>\n                  <p title={achivied.name}>{achivied.name}</p>\n                  <p>R$ {achivied.reward}</p>\n                  <input\n                    type=\"checkbox\"\n                    onClick={(e) => FinishingTask(e, achivied)}\n                  />\n                </div>\n              ))}\n          </Achivied>\n          <NotAchivied>\n            <h2>\n              Tarefas a concluir:{\" \"}\n              {\n                childrenActivies.filter((item) => item.childAchivied === false)\n                  .length\n              }\n            </h2>\n            {childrenActivies\n              .filter((item) => item.childAchivied === false)\n              .map((notAchivied, key) => (\n                <div key={key}>\n                  <p title={notAchivied.name}>{notAchivied.name}</p>\n                  <p>R$ {notAchivied.reward}</p>\n                  <button onClick={() => handleEditing(notAchivied.id)}>\n                    <IoIosCreate />\n                  </button>\n                </div>\n              ))}\n          </NotAchivied>\n          <ButtonsContainer>\n            <button className=\"create-activity\" onClick={updateCard}>\n              Virar\n            </button>\n            <button\n              className=\"create-activity\"\n              onClick={() => handleAdding(children.id)}\n            >\n              Criar Atividade\n            </button>\n          </ButtonsContainer>\n        </Back>\n      </ReactCardFlip>\n\n      <MobileCard>\n        <ChildrenData>\n          <img\n            src=\"https://d3ugyf2ht6aenh.cloudfront.net/stores/001/829/347/themes/amazonas/img-1347263166-1629736427-e77800fdb2094c2bcc4fb6f44d82ce1d1629736428.jpg?1211721950\"\n            alt=\"a\"\n          />\n          <div>\n            <h2>{children.name}</h2>\n            <p>\n              Atividades concluídas:{\" \"}\n              <strong>\n                {\n                  childrenActivies.filter((act) => act.childAchivied === true)\n                    .length\n                }\n              </strong>\n            </p>\n            <p>\n              Atividades a concluir:{\" \"}\n              <strong>\n                {\n                  childrenActivies.filter((act) => act.childAchivied === false)\n                    .length\n                }{\" \"}\n              </strong>\n            </p>\n          </div>\n          {toggle ? (\n            <>\n              <button onClick={() => handleAdding(children.id)}>\n                <IoAddSharp />\n              </button>\n              <button onClick={() => setToggle(!toggle)}>\n                <IoIosArrowDown />\n              </button>\n            </>\n          ) : (\n            <>\n              <button onClick={() => handleAdding(children.id)}>\n                <IoAddSharp />\n              </button>\n              <button onClick={() => setToggle(!toggle)}>\n                <IoIosArrowForward />\n              </button>\n            </>\n          )}\n        </ChildrenData>\n\n        <ChildrenActivities className={toggle ? \"isOpen\" : \"isClosed\"}>\n          <Achivied className={toggle ? \"open\" : \"closed\"}>\n            <h2>\n              Tarefas Concluídas:{\" \"}\n              {\n                childrenActivies.filter((item) => item.childAchivied === true)\n                  .length\n              }\n            </h2>\n            {childrenActivies\n              .filter((item) => item.childAchivied === true)\n              .map((achivied, key) => (\n                <div key={key}>\n                  <p title={achivied.name}>{achivied.name}</p>\n                  <p>R$ {achivied.reward}</p>\n                  <input\n                    type=\"checkbox\"\n                    onClick={(e) => FinishingTask(e, achivied)}\n                  />\n                </div>\n              ))}\n          </Achivied>\n          <NotAchivied className={toggle ? \"open\" : \"closed\"}>\n            <h2>\n              Tarefas a concluir:{\" \"}\n              {\n                childrenActivies.filter((item) => item.childAchivied === false)\n                  .length\n              }\n            </h2>\n            {childrenActivies\n              .filter((item) => item.childAchivied === false)\n              .map((notAchivied, key) => (\n                <div key={key}>\n                  <p title={notAchivied.name}>{notAchivied.name}</p>\n                  <p>R$ {notAchivied.reward}</p>\n                  <button onClick={() => handleEditing(notAchivied.id)}>\n                    <IoIosCreate />\n                  </button>\n                </div>\n              ))}\n          </NotAchivied>\n        </ChildrenActivities>\n      </MobileCard>\n    </>\n  );\n};\nexport default CardChildren;\n","/home/gustavo/q2/gestao3/capstone-q2-educ-financeira-g4/src/Providers/Children/index.tsx",[],"/home/gustavo/q2/gestao3/capstone-q2-educ-financeira-g4/src/Pages/Home/style.ts",[],"/home/gustavo/q2/gestao3/capstone-q2-educ-financeira-g4/src/Routes/routes.tsx",[],"/home/gustavo/q2/gestao3/capstone-q2-educ-financeira-g4/src/Components/NavbarHome/style.ts",[],"/home/gustavo/q2/gestao3/capstone-q2-educ-financeira-g4/src/Pages/Balance/styles.ts",[],"/home/gustavo/q2/gestao3/capstone-q2-educ-financeira-g4/src/Components/ProfileBarParents/index.tsx",["262","263","264"],"import React, { useContext, useEffect } from 'react'\nimport { Link } from 'react-router-dom'\nimport { ActivitiesContext } from '../../Providers/Activities'\nimport { ProfileContainer } from './style'\nimport profile from '../../assets/images/iconProfile.jpg'\nimport { UserContext } from '../../Providers/Users'\nimport { ModalContext } from '../../Providers/Modal'\n\nconst ProfileBarParents = () => {\n    const { getAmountToPay, amountToPay, deleteActivitie } = useContext(ActivitiesContext)\n    const { getUserData, userData } = useContext(UserContext)\n    const { handleEditingProfile } = useContext(ModalContext)\n    useEffect(() => {\n        getAmountToPay(0)\n        getUserData()\n        console.log(userData)\n    }, [])\n\n    return (\n        <ProfileContainer>\n            <div className='profideDescription'>\n                <img src={profile} alt='profile face'/>\n                <h1>{userData.name}</h1>\n                <button onClick={handleEditingProfile}><p>Editar Perfil</p>   </button>             \n            </div>\n            <p>A pagar R${amountToPay.toFixed(2)}</p>\n        </ProfileContainer>\n    )\n}\n\nexport default ProfileBarParents\n","/home/gustavo/q2/gestao3/capstone-q2-educ-financeira-g4/src/Components/ProfileBarParents/style.ts",[],"/home/gustavo/q2/gestao3/capstone-q2-educ-financeira-g4/src/Components/ListChildren/style.js",[],["265","266"],"/home/gustavo/q2/gestao3/capstone-q2-educ-financeira-g4/src/Components/NavbarHome/menuParentsLogin.tsx",["267"],"import React, { useContext } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { UserContext } from \"../../Providers/Users\";\nimport { MenuListContainer } from \"./style\";\n\ninterface MenuListProps {\n  handleClick: () => void;\n}\n\nconst MenuParentsLogin = ({ handleClick }: MenuListProps) => {\n  const { Logout, userData, typeUser } = useContext(UserContext);\n  return (\n    <MenuListContainer>\n      <div className={typeUser === \"parent\" ? \"links parents\" : \"links\"}>\n        <Link onClick={handleClick} to=\"/dashboardparents\">\n          Dashboard\n        </Link>\n\n        <Link onClick={handleClick} to=\"/registerkids\">\n          Cadastrar Dependente\n        </Link>\n\n        <Link onClick={() => handleClick()} to=\"/content\">\n          Conteúdo\n        </Link>\n      </div>\n\n      <div\n        className={\n          typeUser === \"parent\" ? \"btnContainer parents\" : \"btnContainer\"\n        }\n      >\n        <button\n          className=\"btnLogin\"\n          onClick={() => {\n            Logout();\n            handleClick();\n          }}\n        >\n          Logout\n        </button>\n      </div>\n    </MenuListContainer>\n  );\n};\n\nexport default MenuParentsLogin;\n","/home/gustavo/q2/gestao3/capstone-q2-educ-financeira-g4/src/Components/NavbarHome/menuChildrensLogin.tsx",["268"],"import { useContext } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { UserContext } from \"../../Providers/Users\";\nimport { MenuListContainer } from \"./style\";\ninterface MenuListProps {\n  handleClick: () => void;\n}\nconst MenuChildrensLogin = ({ handleClick }: MenuListProps) => {\n  const { Logout, userData, typeUser } = useContext(UserContext);\n  return (\n    <MenuListContainer>\n      <div className={typeUser === \"children\" ? \"links children\" : \"links\"}>\n        <Link onClick={() => handleClick()} to=\"/dashboardkids\">\n          Dashboard\n        </Link>\n\n        <Link onClick={() => handleClick()} to=\"/balance\">\n          Balanço Financeiro\n        </Link>\n\n        <Link onClick={() => handleClick()} to=\"/content\">\n          Conteúdo\n        </Link>\n      </div>\n\n      <div\n        className={\n          typeUser === \"children\" ? \"btnContainer btnChildren\" : \"btnContainer\"\n        }\n      >\n        <button\n          className=\"btnLogin\"\n          onClick={() => {\n            handleClick();\n            Logout();\n          }}\n        >\n          Logout\n        </button>\n      </div>\n    </MenuListContainer>\n  );\n};\n\nexport default MenuChildrensLogin;\n","/home/gustavo/q2/gestao3/capstone-q2-educ-financeira-g4/src/Providers/Modal/index.tsx",["269"],"import { createContext, ReactNode, useContext, useState } from \"react\";\nimport { showToast } from \"../../Components/Toast/style\";\nimport api from \"../../Services/api\";\nimport { ActivitiesContext } from \"../Activities\";\nimport { ChildrenContext } from \"../Children\";\nimport { useUser } from \"../Users\";\n\ninterface ModalProviderProps {\n  children: ReactNode;\n}\n\ninterface Wish {\n  name: string;\n  value: number;\n  kitty: number;\n}\n\ninterface ModalProviderData {\n  handleEditing: (activitieId: number) => void;\n  isEditing: boolean;\n\n  handleAdding: (childrenId: number) => void;\n  isAdding: boolean;\n\n  HandleClickDetails: (item: Wish) => void;\n  isWish: boolean;\n  setIsWish: (isWish: boolean) => void;\n  wish: Wish;\n\n  handleEditingProfile: () => void;\n  isEditingProfile: boolean;\n\n  AddtoKitty: (wish: Wish, value: number) => void;\n}\n\ninterface Children {\n  email: string;\n  name: string;\n  wallet: number;\n  type: string;\n  wishlist?: [];\n  balance?: [];\n  id: number;\n  parentId: number;\n}\n\nexport const ModalContext = createContext<ModalProviderData>(\n  {} as ModalProviderData\n);\n\nexport const ModalProvider = ({ children }: ModalProviderProps) => {\n  const { SpendBalance } = useUser();\n  const { changingActualChildren } = useContext(ChildrenContext);\n  const { changingActualIdActivitie } = useContext(ActivitiesContext);\n  const [wish, setWish] = useState<Wish>({} as Wish);\n  const [isEditing, setIsEditing] = useState(false);\n  const [isAdding, setIsAdding] = useState(false);\n  const [isWish, setIsWish] = useState(false);\n  const [isEditingProfile, setIsEditingProfile] = useState(false);\n  const handleEditing = (activitieId: number) => {\n    changingActualIdActivitie(activitieId);\n    setIsEditing(!isEditing);\n  };\n  const { userData } = useUser();\n\n  const handleEditingProfile = () => {\n    setIsEditingProfile(!isEditingProfile);\n  };\n\n  const handleAdding = (childrenId: number) => {\n    changingActualChildren(childrenId);\n    setIsAdding(!isAdding);\n  };\n\n  const HandleClickDetails = (item: Wish) => {\n    setIsWish(!isWish);\n    setWish(item);\n  };\n\n  const AddtoKitty = (wish: Wish, value: number) => {\n    if (value + wish.kitty > wish.value) {\n      showToast({ type: \"warn\", message: \"Passou de 100%\" });\n      return;\n    }\n    if (value + wish.kitty === wish.value) {\n      showToast({ type: \"sucess\", message: \"Parabéns, chegou a 100%\" });\n    }\n    const el = userData.wishlist.map((item) => {\n      if (item.name === wish.name) {\n        return {\n          name: wish.name,\n          value: wish.value,\n          kitty: wish.kitty + value,\n        };\n      }\n      return item;\n    });\n    const data = { wishlist: el };\n    const id = localStorage.getItem(\"userId\");\n    SpendBalance(userData, -value);\n    console.log(data);\n\n    api\n      .patch(`users/${id}`, data, {\n        headers: {\n          Authorization: `Bearer ${localStorage.getItem(\"token\")}`,\n        },\n      })\n      .then((response) => {\n        console.log(\"response\", response);\n        const newWish = response.data.wishlist.filter(\n          (wishes: any) => wishes.name === wish.name\n        );\n        setWish(newWish[0]);\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n  };\n\n  return (\n    <ModalContext.Provider\n      value={{\n        handleEditing,\n        isEditing,\n        handleAdding,\n        isAdding,\n        HandleClickDetails,\n        setIsWish,\n        isWish,\n        wish,\n        handleEditingProfile,\n        isEditingProfile,\n        AddtoKitty,\n      }}\n    >\n      {children}\n    </ModalContext.Provider>\n  );\n};\n\nexport const useModal = () => useContext(ModalContext);\n","/home/gustavo/q2/gestao3/capstone-q2-educ-financeira-g4/src/Components/ProfileBarChildren/index.tsx",["270"],"\nimport React, { useContext, useEffect } from 'react'\nimport { ProfileContainerChildren } from './style'\nimport iconProfile from '../../assets/images/iconProfile.jpg'\nimport { UserContext } from '../../Providers/Users'\nimport { GiTwoCoins } from \"react-icons/gi\";\nimport { useHistory } from 'react-router';\n\n\nconst ProfileBarChildren = () => {\n    const { userData, getUserData, typeUser } = useContext(UserContext)\n    const history = useHistory();\n\n    useEffect(() => {\n        getUserData()\n    }, [])\n\n    useEffect(() => {\n        if (typeUser !== 'children') {\n            history.push('/')\n        }\n    })\n\n    return (\n        <ProfileContainerChildren>\n            <div className='profileDescriptions'>\n                <img src={iconProfile} alt='Icon profile face' />\n                    \n                <h1>{userData.name}</h1>                \n            </div>\n\n            <h3 className='wallet'>\n                Saldo: R$ {Number((userData.wallet)).toFixed(2)} \n                <GiTwoCoins/>\n            </h3>\n\n            <button\n                onClick={() => history.push('/balance') }\n            >\n                Movimentações\n            </button>\n        </ProfileContainerChildren>\n    )\n}\n\nexport default ProfileBarChildren","/home/gustavo/q2/gestao3/capstone-q2-educ-financeira-g4/src/Components/FormCreatingActivity/index.tsx",[],"/home/gustavo/q2/gestao3/capstone-q2-educ-financeira-g4/src/Components/FormEditingActivity/index.tsx",[],"/home/gustavo/q2/gestao3/capstone-q2-educ-financeira-g4/src/Components/FormCreatingActivity/style.js",[],"/home/gustavo/q2/gestao3/capstone-q2-educ-financeira-g4/src/Components/FormEditingActivity/style.js",[],"/home/gustavo/q2/gestao3/capstone-q2-educ-financeira-g4/src/Components/ProfileBarChildren/style.ts",[],"/home/gustavo/q2/gestao3/capstone-q2-educ-financeira-g4/src/Components/CardWish/index.tsx",[],"/home/gustavo/q2/gestao3/capstone-q2-educ-financeira-g4/src/Components/CardWish/styles.ts",[],"/home/gustavo/q2/gestao3/capstone-q2-educ-financeira-g4/src/Components/CardWishDetails/index.tsx",["271"],"import { ModalWish, WishListHeader, WishContent, Porcent } from \"./styles\";\n// import { BsFillPencilFill } from \"react-icons/bs\";\nimport { useModal } from \"../../Providers/Modal\";\nimport { useState } from \"react\";\nimport { BiSend } from \"react-icons/bi\";\nimport { CircularProgressbar, buildStyles } from \"react-circular-progressbar\";\nimport { useUser } from \"../../Providers/Users\";\n\ninterface Wish {\n  name: string;\n  value: number;\n  kitty: number;\n}\n\nexport const CardWishDetails = () => {\n  const { isWish, setIsWish, wish, AddtoKitty } = useModal();\n\n  const { userData } = useUser();\n\n  const [isParent] = useState<boolean>(\n    userData.type === \"parent\" ? true : false\n  );\n\n  const percentage = (wish.kitty / wish.value) * 100;\n\n  const [valuekitty, setValueKitty] = useState(0);\n\n  const handleClick = () => {\n    AddtoKitty(wish, valuekitty);\n  };\n  return (\n    <ModalWish>\n      <WishListHeader>\n        <h3>{wish.name}</h3>\n        <button onClick={() => setIsWish(!isWish)}>x</button>\n      </WishListHeader>\n      <WishContent>\n        <h2>Valor atual: {wish.kitty?.toFixed(2).replace(\".\", \",\")}</h2>\n        <Porcent>\n          <CircularProgressbar\n            value={percentage}\n            text={`${percentage.toFixed(2).replace(\".\", \",\")}%`}\n            className=\"circle-progress\"\n            styles={buildStyles({\n              textColor: \"#000000\",\n              pathColor: \"#FF715B\",\n              trailColor: \"#19b9b9\",\n            })}\n          />\n        </Porcent>\n        <h4>Meta: {wish.value?.toFixed(2).replace(\".\", \",\")}</h4>\n        {!isParent && (\n          <div>\n            <label>Vaquinha</label>\n            <input\n              type=\"number\"\n              placeholder=\"Adicionar\"\n              onChange={(e) => setValueKitty(Number(e.target.value))}\n            />\n            <button onClick={handleClick}>\n              <BiSend />\n            </button>\n          </div>\n        )}\n      </WishContent>\n    </ModalWish>\n  );\n};\n","/home/gustavo/q2/gestao3/capstone-q2-educ-financeira-g4/src/Components/CardWishDetails/styles.ts",[],"/home/gustavo/q2/gestao3/capstone-q2-educ-financeira-g4/src/Components/Toast/style.tsx",[],"/home/gustavo/q2/gestao3/capstone-q2-educ-financeira-g4/src/Pages/DashboardKids/style.ts",[],"/home/gustavo/q2/gestao3/capstone-q2-educ-financeira-g4/src/Pages/ContentPage/index.tsx",[],"/home/gustavo/q2/gestao3/capstone-q2-educ-financeira-g4/src/Components/FormEditingProfile/index.tsx",["272"],"import { useForm } from \"react-hook-form\";\nimport { Form } from \"./style\";\nimport { IoMdClose } from \"react-icons/io\";\nimport { useContext } from \"react\";\nimport { ModalContext } from \"../../Providers/Modal\";\nimport { yupResolver } from \"@hookform/resolvers/yup\";\nimport * as yup from \"yup\";\nimport { useUser } from \"../../Providers/Users\";\n\ninterface FormData {\n  name: string;\n  password: string;\n}\n\nconst FormEditingProfile = () => {\n  const { handleEditingProfile } = useContext(ModalContext);\n  const { EditProfile } = useUser();\n\n  const id = localStorage.getItem(\"userId\");\n  const schema = yup.object().shape({\n    name: yup\n      .string()\n      .required(\"Nome obrigatório\")\n      .max(13, \"Permitido apenas 13 caracteres\")\n      .matches(/^[A-Za-záàâãéèêíïóôõöúçñÁÀÂÃÉÈÍÏÓÔÕÖÚÇÑ ]+$/, \"Somente letras\"),\n    password: yup.string().required(\"Senha obrigatória\"),\n    confirmPassword: yup\n      .string()\n      .oneOf([yup.ref(\"password\")], \"Senhas diferentes\"),\n  });\n  const {\n    register,\n    handleSubmit,\n    formState: { errors },\n  } = useForm({\n    resolver: yupResolver(schema),\n  });\n\n  const onSubmitFunction = (data: FormData) => {\n    const { name, password } = data;\n    const toApi = { name, password };\n    EditProfile(toApi);\n  };\n  return (\n    <Form\n      onSubmit={handleSubmit(onSubmitFunction)}\n      initial={{ scale: 0, opacity: 0 }}\n      animate={{ scale: 1, opacity: 1 }}\n      transition={{\n        type: \"spring\",\n        stiffness: 80,\n      }}\n    >\n      <div>\n        <h2>Editar Perfil</h2>\n        <button onClick={() => handleEditingProfile()}>\n          <IoMdClose />\n        </button>\n      </div>\n      <section>\n        <p>{errors.name?.message}</p>\n        <input type=\"text\" placeholder=\"Editar Nome\" {...register(\"name\")} />\n      </section>\n      <section>\n        <p>{errors.password?.message}</p>\n        <input\n          type=\"password\"\n          placeholder=\"Editar senha\"\n          {...register(\"password\")}\n        />\n      </section>\n      <section>\n        <p>{errors.confirmPassword?.message}</p>\n        <input\n          type=\"password\"\n          placeholder=\"Confirmar senha\"\n          {...register(\"confirmPassword\")}\n        />\n      </section>\n\n      <button className=\"add-button\">Editar</button>\n    </Form>\n  );\n};\n\nexport default FormEditingProfile;\n","/home/gustavo/q2/gestao3/capstone-q2-educ-financeira-g4/src/Components/Chart/index.tsx",["273"],"import { useContext, useEffect, useState } from 'react';\nimport { Chart, LineAdvance} from 'bizcharts';\nimport { Balance, UserContext } from '../../Providers/Users';\nimport { ButtonChart } from './style'\n\ninterface SortBalanceTypes {\n\tdate: string ;\n\twallet: string;\n\ttotal: number;\n}\n\ninterface BalanceDate {\n\tdate: Date;\n\tmove: number;\n}\n\nfunction Demo() {\n\tconst { userData } = useContext(UserContext);\n\tconst [sortBalance, setSortBalance] = useState<SortBalanceTypes[]>([])\n\tconst { balance } = userData;\n\tconst newBalance = sortBalanceByDate(balance);\n\n\tfunction sortBalanceByDate (balance: Balance[]) {\n\t\t\n\t\tlet balanceTypedDate = balance?.map((el: Balance) => {\n\t\t\tlet year = Number(el.date.slice(6, 10));\n\t\t\tlet month = Number(el.date.slice(3, 5)) - 1;\n\t\t\tlet day = Number(el.date.slice(0, 2));\n\n\t\t\treturn \t{\n\t\t\t\tdate: new Date(year, month , day ),\n\t\t\t\tmove: el.move\n\t\t\t}\n\t\t})\n\n\t\tbalanceTypedDate = balanceTypedDate?.sort((a: any, b: any) => {\n\t\t\treturn a.date - b.date\n\t\t})\n\n\t\tlet balanceTypedString = balanceTypedDate?.map((el: BalanceDate) => {\n\t\t\treturn\t {\n\t\t\t\tdate: el.date.toLocaleDateString('pt-br').slice(0, 10),\n\t\t\t\tmove: el.move\n\t\t\t}\n\t\t})\n\t\treturn balanceTypedString\t\t\n\t}\n\n\tconst assembleObject  = (arr: string[], chartData: SortBalanceTypes[]) => {\n\t\t\n\t\tarr.forEach((el: string) => chartData.push({\n            date: el,\n            wallet: 'saldo',\n            total: 0\n        })); \n\n\t\treturn chartData;\n\t}\n\n\tconst sumTotalWallet = (chartData: SortBalanceTypes[], balance: Balance[]) => {\n\n\t\tchartData.forEach((el) => {\n\t\t\tel.total = balance.filter((val: Balance) => val.date.includes(el.date))\n\t\t\t.reduce((acc, item) => acc + item.move, 0)\n\t\t});\n\n\t\treturn chartData;\n\t}\n\n\tconst getMonthlyBalance = () => {\n        let chartData: { date: string; wallet: string; total: number; }[] = []\n\t\tlet filterType: string[] = [];\t\t\n\n\t\tnewBalance.forEach((el: Balance) => {\n            !filterType.includes(el.date.slice(3, 10)) && filterType.push(el.date.slice(3, 10))\n        })         \n\n\t\tassembleObject(filterType, chartData)\n\n\t\tsumTotalWallet(chartData, balance)\n\n       \tchartData = chartData.sort((a: SortBalanceTypes, b: SortBalanceTypes) => Number(a.date.slice(0, 2)) - Number(b.date.slice(0, 2)))\n        \n        setSortBalance(chartData)\n\t}\n\n\tconst getWeeklyBalance = () => {\n\t\tlet chartData: { date: string; wallet: string; total: number; }[] = []\n\t\tlet filterType: string[] = []\n\n\t\tnewBalance.forEach((el: Balance) => {\n            !filterType.includes(el.date.slice(0, 5)) && filterType.push(el.date.slice(0, 5))\n        })         \n\n\t\tassembleObject(filterType, chartData)\n\n\t\tsumTotalWallet(chartData, balance)\n       \n\t\tchartData = chartData.sort((a: any, b: any) => {\n\t\t\treturn a.date - b.date\n\t\t})\n\n        setSortBalance(chartData)\n\t}\n\n\tuseEffect(() => {\n\t\t(balance?.length >=2) && getMonthlyBalance()\n\t}, [])\n\n\treturn (\n\t\t<>\n\t\t\t{balance?.length < 2? (\n\t\t\t\t<h2>Você ainda não tem movimentações o suficiente &#128552;</h2>\n\t\t\t):(\n\t\t\t\t<>\n\t\t\t\t\t<ButtonChart onClick={getMonthlyBalance}>Mensal</ButtonChart>\n\t\t\t\t\t<ButtonChart onClick={getWeeklyBalance}>Semanal</ButtonChart>\n\t\t\t\t\t<Chart padding={[10, 20, 50, 40]} autoFit height={300} data={sortBalance} >\n\t\t\t\t\t<LineAdvance\n\t\t\t\t\t\tshape=\"smooth\"\n\t\t\t\t\t\tpoint\n\t\t\t\t\t\tarea\n\t\t\t\t\t\tposition=\"date*total\"\n\t\t\t\t\t\tcolor=\"wallet\"\n\t\t\t\t\t/>\t\n\t\t\t\t\t</Chart>\n\t\t\t\t</>\n\t\t\t)}\n\t\t</>\n\t)\n}\n\n\nexport default Demo","/home/gustavo/q2/gestao3/capstone-q2-educ-financeira-g4/src/Pages/ContentPage/style.ts",[],"/home/gustavo/q2/gestao3/capstone-q2-educ-financeira-g4/src/Components/FormEditingProfile/style.js",[],"/home/gustavo/q2/gestao3/capstone-q2-educ-financeira-g4/src/Components/Chart/style.ts",[],"/home/gustavo/q2/gestao3/capstone-q2-educ-financeira-g4/src/Pages/ContentHome/style.ts",[],"/home/gustavo/q2/gestao3/capstone-q2-educ-financeira-g4/src/Pages/DashboardParents/style.ts",[],"/home/gustavo/q2/gestao3/capstone-q2-educ-financeira-g4/src/Components/CardChildren/style.ts",[],{"ruleId":"274","replacedBy":"275"},{"ruleId":"276","replacedBy":"277"},{"ruleId":"278","severity":1,"message":"279","line":92,"column":24,"nodeType":"280","messageId":"281","endLine":92,"endColumn":39},{"ruleId":"278","severity":1,"message":"282","line":1,"column":17,"nodeType":"280","messageId":"281","endLine":1,"endColumn":27},{"ruleId":"278","severity":1,"message":"283","line":2,"column":10,"nodeType":"280","messageId":"281","endLine":2,"endColumn":26},{"ruleId":"278","severity":1,"message":"284","line":22,"column":10,"nodeType":"280","messageId":"281","endLine":22,"endColumn":19},{"ruleId":"278","severity":1,"message":"285","line":40,"column":5,"nodeType":"280","messageId":"281","endLine":40,"endColumn":16},{"ruleId":"286","severity":1,"message":"287","line":73,"column":6,"nodeType":"288","endLine":73,"endColumn":8,"suggestions":"289"},{"ruleId":"286","severity":1,"message":"290","line":27,"column":6,"nodeType":"288","endLine":27,"endColumn":8,"suggestions":"291"},{"ruleId":"286","severity":1,"message":"287","line":31,"column":7,"nodeType":"288","endLine":31,"endColumn":9,"suggestions":"292"},{"ruleId":"278","severity":1,"message":"293","line":74,"column":9,"nodeType":"280","messageId":"281","endLine":74,"endColumn":20},{"ruleId":"278","severity":1,"message":"294","line":25,"column":9,"nodeType":"280","messageId":"281","endLine":25,"endColumn":16},{"ruleId":"286","severity":1,"message":"287","line":30,"column":6,"nodeType":"288","endLine":30,"endColumn":8,"suggestions":"295"},{"ruleId":"278","severity":1,"message":"296","line":16,"column":25,"nodeType":"280","messageId":"281","endLine":16,"endColumn":33},{"ruleId":"286","severity":1,"message":"297","line":24,"column":6,"nodeType":"288","endLine":24,"endColumn":8,"suggestions":"298"},{"ruleId":"286","severity":1,"message":"287","line":28,"column":6,"nodeType":"288","endLine":28,"endColumn":8,"suggestions":"299"},{"ruleId":"278","severity":1,"message":"300","line":43,"column":11,"nodeType":"280","messageId":"281","endLine":43,"endColumn":22},{"ruleId":"278","severity":1,"message":"301","line":51,"column":5,"nodeType":"280","messageId":"281","endLine":51,"endColumn":20},{"ruleId":"286","severity":1,"message":"302","line":86,"column":6,"nodeType":"288","endLine":86,"endColumn":21,"suggestions":"303"},{"ruleId":"278","severity":1,"message":"304","line":2,"column":10,"nodeType":"280","messageId":"281","endLine":2,"endColumn":14},{"ruleId":"278","severity":1,"message":"305","line":10,"column":42,"nodeType":"280","messageId":"281","endLine":10,"endColumn":57},{"ruleId":"286","severity":1,"message":"306","line":17,"column":8,"nodeType":"288","endLine":17,"endColumn":10,"suggestions":"307"},{"ruleId":"274","replacedBy":"275"},{"ruleId":"276","replacedBy":"277"},{"ruleId":"278","severity":1,"message":"296","line":11,"column":19,"nodeType":"280","messageId":"281","endLine":11,"endColumn":27},{"ruleId":"278","severity":1,"message":"296","line":9,"column":19,"nodeType":"280","messageId":"281","endLine":9,"endColumn":27},{"ruleId":"278","severity":1,"message":"308","line":36,"column":11,"nodeType":"280","messageId":"281","endLine":36,"endColumn":19},{"ruleId":"286","severity":1,"message":"309","line":16,"column":8,"nodeType":"288","endLine":16,"endColumn":10,"suggestions":"310"},{"ruleId":"278","severity":1,"message":"311","line":9,"column":11,"nodeType":"280","messageId":"281","endLine":9,"endColumn":15},{"ruleId":"278","severity":1,"message":"312","line":19,"column":9,"nodeType":"280","messageId":"281","endLine":19,"endColumn":11},{"ruleId":"286","severity":1,"message":"313","line":108,"column":5,"nodeType":"288","endLine":108,"endColumn":7,"suggestions":"314"},"no-native-reassign",["315"],"no-negated-in-lhs",["316"],"@typescript-eslint/no-unused-vars","'setIsValidToken' is assigned a value but never used.","Identifier","unusedVar","'useContext' is defined but never used.","'BsFillPencilFill' is defined but never used.","'TextField' is defined but never used.","'getUserData' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'isTokenValid'. Either include it or remove the dependency array.","ArrayExpression",["317"],"React Hook useEffect has missing dependencies: 'GetActivities' and 'userId'. Either include them or remove the dependency array.",["318"],["319"],"'getLastCard' is assigned a value but never used.","'history' is assigned a value but never used.",["320"],"'userData' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'getYourChildrens'. Either include it or remove the dependency array.",["321"],["322"],"'ChildrenObj' is defined but never used.","'updateActivitie' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'children.id'. Either include it or remove the dependency array.",["323"],"'Link' is defined but never used.","'deleteActivitie' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'getAmountToPay', 'getUserData', and 'userData'. Either include them or remove the dependency array.",["324"],"'Children' is defined but never used.","React Hook useEffect has a missing dependency: 'getUserData'. Either include it or remove the dependency array.",["325"],"'Wish' is defined but never used.","'id' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'balance?.length' and 'getMonthlyBalance'. Either include them or remove the dependency array.",["326"],"no-global-assign","no-unsafe-negation",{"desc":"327","fix":"328"},{"desc":"329","fix":"330"},{"desc":"327","fix":"331"},{"desc":"327","fix":"332"},{"desc":"333","fix":"334"},{"desc":"327","fix":"335"},{"desc":"336","fix":"337"},{"desc":"338","fix":"339"},{"desc":"340","fix":"341"},{"desc":"342","fix":"343"},"Update the dependencies array to be: [isTokenValid]",{"range":"344","text":"345"},"Update the dependencies array to be: [GetActivities, userId]",{"range":"346","text":"347"},{"range":"348","text":"345"},{"range":"349","text":"345"},"Update the dependencies array to be: [getYourChildrens]",{"range":"350","text":"351"},{"range":"352","text":"345"},"Update the dependencies array to be: [children.id, createActivie]",{"range":"353","text":"354"},"Update the dependencies array to be: [getAmountToPay, getUserData, userData]",{"range":"355","text":"356"},"Update the dependencies array to be: [getUserData]",{"range":"357","text":"358"},"Update the dependencies array to be: [balance?.length, getMonthlyBalance]",{"range":"359","text":"360"},[1745,1747],"[isTokenValid]",[818,820],"[GetActivities, userId]",[869,871],[769,771],[999,1001],"[getYourChildrens]",[1050,1052],[2318,2333],"[children.id, createActivie]",[719,721],"[getAmountToPay, getUserData, userData]",[502,504],"[getUserData]",[2836,2838],"[balance?.length, getMonthlyBalance]"]